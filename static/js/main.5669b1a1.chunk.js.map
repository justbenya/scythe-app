{"version":3,"sources":["components/ButtonInstallPWA.tsx","history.ts","common/utils.ts","features/players/playersSlice.ts","common/scytheLogic.ts","img/bg.jpg","pages/First.tsx","components/ButtonNewGame.tsx","components/FactionIcon.tsx","components/FactionIconWithBadge.tsx","components/TabPanel.tsx","components/FullWidthTabs.tsx","components/FactionCharacterImage.tsx","features/players/selectors.ts","features/names/namesSlice.ts","features/names/selectors.ts","features/names/FullScreenDialogPlayerName.tsx","features/players/PlayerCard.tsx","pages/Home.tsx","pages/Result.tsx","features/players/ScoreForm.tsx","pages/Score.tsx","routes.ts","pages/Settings.tsx","components/AppMenuNavigation.tsx","components/MainLayout.tsx","pages/NotFound.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["deferredPrompt","createHistory","basename","ButtonInstallPWA","useState","installable","setInstallable","useEffect","window","addEventListener","e","preventDefault","Button","onClick","prompt","userChoice","then","choiceResult","outcome","console","log","shuffle","array","result","i","length","randIndex","Math","floor","random","temp","clearPath","path","replace","playersSlice","createSlice","name","initialState","reducers","createPlayer","reducer","state","action","Object","values","TOTAL_PLAYERS","usedFaction","map","faction","usedMats","mat","randomFactions","factions","filter","includes","randomMats","mats","player","id","payload","gold","popularity","stars","territories","resources","buildingBonuses","points","prepare","nanoid","editPlayer","removePlayer","omit","deletePlayers","actions","changeFieldInPlayer","field","newValue","playerId","dispatch","getState","players","prevValue","isValueAlreadySelected","find","changePlayer","history","push","routes","index","findEngNameFactionToUrl","scoreFormSubmit","formData","nextPlayer","calculatePoints","every","score","addPlayer","a","getRouteLastAddedPlayer","useStyles","makeStyles","container","height","paddingBottom","paperContainer","backgroundColor","backgroundImage","Image","backgroundPosition","backgroundSize","logo","marginTop","width","title","paddingTop","fontWeight","color","fontSize","textShadow","btnAddPlayer","First","useDispatch","classes","Paper","className","elevation","square","variant","Container","fixed","Grid","direction","justify","alignItems","spacing","item","Typography","align","fullWidth","Transition","React","forwardRef","props","ref","Slide","ButtonNewGame","open","setOpen","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","FactionIcon","iconPath","src","alt","FactionIconWithBadge","Badge","invisible","overlap","badgeContent","style","green","getIconPath","root","margin","maxWidth","TabPanel","children","value","other","role","hidden","Box","p","theme","palette","background","paper","default","tab","padding","textTransform","opacity","minHeight","text","primary","swipeableViews","FullWidthTabs","useTheme","useParams","foundPlayerIndexByFaction","setValue","useHistory","factionUrl","useRouteMatch","scoreUrl","url","getLabel","shortName","AppBar","position","Toolbar","Tabs","onChange","event","scrollButtons","indicatorColor","Tab","component","Link","clsx","label","icon","to","threshold","hysteresis","resistance","axis","onChangeIndex","dir","media","objectPosition","FactionCharacterImage","characterPath","CardMedia","image","getPlayers","getPlayerWhoHasFirstTurn","createSelector","playerFirstTurn","getPlayersSortByFirstTurn","playerFirstTurnIndex","factionsMoveOrder","indexOf","turnOrder","reversedMoveOrder","_","nth","it","fistElement","slice","reverse","getPlayerByFaction","namesSlice","addName","deleteName","changeName","obj","getNames","names","createStyles","dialogPaper","list","cursor","paddingLeft","display","justifyContent","sectionText","listItem","paddingRight","transition","createFilterOptions","FullScreenDialogPlayerName","useSelector","useAutocomplete","options","debug","getOptionLabel","option","inputValue","filterOptions","params","filtered","isNameNotEmpty","isNameUnique","isNameExist","findIndex","createName","setName","getInputProps","getOptionProps","groupedOptions","handleClickOpen","TextField","size","inputProps","disabled","pointerEvents","fullScreen","PaperProps","xs","Divider","autoFocus","onFocus","target","select","List","disablePadding","Fragment","ListItem","renderItem","IconButton","aria-label","stopPropagation","handleDeleteName","expand","transform","marginLeft","transitions","create","duration","shortest","cardActions","cardContent","expandOpen","matImage","PlayerCard","expanded","setExpanded","Card","CardContent","sm","SelectProps","renderValue","MenuItem","CardActions","disableSpacing","aria-expanded","Collapse","in","timeout","unmountOnExit","imgPath","Home","borderCollapse","minWidth","sticky","left","zIndex","resourceIcon","verticalAlign","Result","playersByWinningPosition","sort","b","gameEndPosition","TableContainer","Table","TableHead","TableRow","TableCell","resource","TableBody","scope","getShortNameFaction","max","schema","yup","shape","required","min","integer","typeError","ScoreForm","saveData","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","reset","undefined","handleOnFocus","onSubmit","autoComplete","noValidate","error","helperText","message","inputRef","type","InputProps","startAdornment","InputAdornment","Score","currentIndex","last","first","prevPlayer","foundPrevNextPlayers","exact","NotFound","FormControlLabel","control","Switch","checked","rel","href","slug","process","dictionaryByFactionNames","keyBy","getLastAddedFaction","lastAddedPlayer","homePage","searchFaction","AppMenuNavigation","BottomNavigation","location","pathname","showLabels","BottomNavigationAction","main","MainLayout","orientation","useOrientationChange","createMuiTheme","secondary","red","light","dark","contrastText","A400","App","ThemeProvider","CssBaseline","route","rootReducer","combineReducers","persistConfig","key","version","storage","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","loading","StylesProvider","injectFirst","document","getElementById","URL","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5669b1a1.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport React, { useEffect, useState } from 'react';\n\nlet deferredPrompt: any;\n\nexport const ButtonInstallPWA = () => {\n  const [installable, setInstallable] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener('beforeinstallprompt', (e: Event) => {\n      // Prevent the mini-infobar from appearing on mobile\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      deferredPrompt = e;\n      // Update UI notify the user they can install the PWA\n      setInstallable(true);\n    });\n  }, []);\n\n\n  const handleInstallClick = () => {\n    // Hide the app provided install promotion\n    setInstallable(false);\n    // Show the install prompt\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice.then((choiceResult: any) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the install prompt');\n      } else {\n        console.log('User dismissed the install prompt');\n      }\n    });\n  };\n\n\n  return (\n    <div>\n      { installable && <Button onClick={ handleInstallClick }>Установить</Button> }\n    </div>\n  );\n};\n\n","import { createHashHistory as createHistory } from 'history';\n\nexport default createHistory({\n  basename: '/',\n});\n","export function shuffle(array: any): Array<any> {\n  const result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    let randIndex = Math.floor(Math.random() * (i + 1));\n    let temp = result[i];\n    result[i] = result[randIndex];\n    result[randIndex] = temp;\n  }\n  return result;\n}\n\nexport function isEmpty(obj: object | null) {\n  return obj === null ? true : Object.keys(obj).length === 0;\n}\n\nexport function clearPath(path: string): string {\n  const firstVariant = path.replace(':id?/', '');\n  return firstVariant.replace(':id', '');\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport omit from 'lodash-es/omit';\nimport { nanoid } from 'nanoid';\nimport { AppThunk } from '../../app/store';\nimport {\n  calculatePoints,\n  factions,\n  findEngNameFactionToUrl,\n  getRouteLastAddedPlayer,\n  mats,\n  TOTAL_PLAYERS,\n} from '../../common/scytheLogic';\nimport { clearPath, shuffle } from '../../common/utils';\nimport history from '../../history';\nimport { routes } from '../../routes';\nimport { IPlayer, IPoints, PlayersType } from './types';\n\nconst initialState: PlayersType = {};\n\nconst playersSlice = createSlice({\n  name: 'players',\n  initialState,\n  reducers: {\n    createPlayer: {\n      reducer: (state, action: PayloadAction<{ id: string }>) => {\n        if (Object.values(state).length >= TOTAL_PLAYERS) {\n          return;\n        }\n\n        // 1. Получить уже используемые фракции и планшеты\n        const usedFaction = Object.values(state).map(i => i.faction);\n        const usedMats = Object.values(state).map(i => i.mat);\n\n        // 2. Рандомно выберем фракции и планшеты, уберем уже используемые\n        const randomFactions = shuffle(factions).filter(faction => !usedFaction.includes(faction.name));\n        const randomMats = shuffle(mats).filter(mat => !usedMats.includes(mat.name));\n\n        // 3. Готово!\n        const faction = randomFactions[0].name;\n        const mat = randomMats[0].name;\n\n        const player = {\n          id: action.payload.id,\n          name: 'Player ' + (Object.values(state).length + 1),\n          faction,\n          mat,\n          gold: 0,\n          popularity: 0,\n          stars: 0,\n          territories: 0,\n          resources: 0,\n          buildingBonuses: 0,\n          points: 0,\n        };\n\n        state[player.id] = player;\n      },\n      prepare: () => {\n        const id = nanoid();\n        return { payload: { id } };\n      },\n    },\n\n    editPlayer(state, action: PayloadAction<IPlayer>) {\n      return { ...state, [action.payload.id]: action.payload };\n    },\n\n    removePlayer(state, action: PayloadAction<string>) {\n      return omit(state, action.payload);\n    },\n\n    deletePlayers() {\n      return {};\n    },\n  },\n});\n\nexport const {\n  createPlayer,\n  editPlayer,\n  removePlayer,\n  deletePlayers,\n} = playersSlice.actions;\n\nexport const changeFieldInPlayer = (\n  field: 'faction' | 'mat',\n  newValue: string,\n  playerId: string,\n): AppThunk => {\n  return (dispatch, getState) => {\n    const players = getState().players;\n    const prevValue = players[playerId][field];\n\n    const isValueAlreadySelected = Object.values(players).find(player => player[field] === newValue);\n\n    if (isValueAlreadySelected) {\n      const changePlayer = { ...players[isValueAlreadySelected.id], [field]: prevValue };\n      dispatch(editPlayer(changePlayer));\n    }\n\n    const changePlayer = { ...players[playerId], [field]: newValue };\n    dispatch(editPlayer(changePlayer));\n\n    if (field === 'faction') {\n      history.push(`${ clearPath(routes.index.path) }${ findEngNameFactionToUrl(changePlayer.faction) }`);\n    }\n  };\n};\n\nexport const scoreFormSubmit = (player: IPlayer, formData: IPoints, nextPlayer: IPlayer): AppThunk => {\n  return (dispatch, getState) => {\n    const points = calculatePoints(formData);\n\n    dispatch(editPlayer({\n      ...player,\n      ...formData,\n      points,\n    }));\n\n    const players = Object.values(getState().players);\n    if (players.every(player => player.points > 0)) {\n      history.push(routes.result.path);\n    } else {\n      history.push(`${ clearPath(routes.score.path) }${ findEngNameFactionToUrl(nextPlayer.faction) }`);\n    }\n  };\n};\n\nexport const addPlayer = (): AppThunk => {\n  return async (dispatch, getState) => {\n    dispatch(createPlayer());\n    const players = Object.values(getState().players);\n    const path = getRouteLastAddedPlayer(players);\n    history.push(path);\n  };\n};\n\nexport const deletePlayer = (id: string): AppThunk => {\n  return (dispatch => {\n    dispatch(removePlayer(id));\n    history.push(clearPath(routes['index'].path));\n  });\n};\n\nexport const deleteAllPlayers = (): AppThunk => {\n  return (dispatch => {\n    dispatch(deletePlayers());\n    history.push('/');\n  });\n};\n\nexport default playersSlice.reducer;\n","import keyBy from 'lodash-es/keyBy';\nimport { IPlayer, IPoints } from '../features/players/types';\nimport { routes } from '../routes';\nimport { clearPath } from './utils';\n\nexport const TOTAL_PLAYERS = 7;\n\nexport const factionsMoveOrder = [\n  'Республика Поляния',\n  'Клан Альбион',\n  'Северное королевство',\n  'Руссветский союз',\n  'Сёгунат Тогава',\n  'Крымское ханство',\n  'Саксонская империя',\n];\n\nexport type FactionType = 'polania' | 'saxony' | 'crimean' | 'nordic' | 'rusviet' | 'albion' | 'japan';\n\nexport const factions = [\n  {\n    name: 'Республика Поляния',\n    shortName: 'Поляния',\n    slug: 'polania',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/polania.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/polania.png`,\n  },\n  {\n    name: 'Саксонская империя',\n    shortName: 'Саксония',\n    slug: 'saxony',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/saxony.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/saxony.png`,\n  },\n  {\n    name: 'Крымское ханство',\n    shortName: 'Крым',\n    slug: 'crimean',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/crimean.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/crimean.png`,\n  },\n  {\n    name: 'Северное королевство',\n    shortName: 'Север',\n    slug: 'nordic',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/nordic.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/nordic.png`,\n  },\n  {\n    name: 'Руссветский союз',\n    shortName: 'Руссвет',\n    slug: 'rusviet',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/rusviet.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/rusviet.png`,\n  },\n  {\n    name: 'Клан Альбион',\n    shortName: 'Альбион',\n    slug: 'albion',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/albion.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/albion.png`,\n  },\n  {\n    name: 'Сёгунат Тогава',\n    shortName: 'Тогава',\n    slug: 'japan',\n    characterPath: `${ process.env.PUBLIC_URL }/assets/factions/japan.jpg`,\n    iconPath: `${ process.env.PUBLIC_URL }/assets/icons/factions/japan.png`,\n  },\n];\n\nexport const mats = [\n  {\n    name: 'Промышленный (1)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/industrial1.jpg`,\n  },\n  {\n    name: 'Строительный (2)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/engineering2.jpg`,\n  },\n  {\n    name: 'Военный (2А)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/argicultural5.jpg`, // todo change img\n  },\n  {\n    name: 'Патриотический (3)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/patriotic3.jpg`,\n  },\n  {\n    name: 'Инновационный (3А)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/argicultural5.jpg`, // todo change img\n  },\n  {\n    name: 'Технический (4)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/mechanical4.jpg`,\n  },\n  {\n    name: 'Фермерский (5)',\n    imgPath: `${ process.env.PUBLIC_URL }/assets/mats/argicultural5.jpg`,\n  },\n];\n\nexport const resources = [\n  { name: 'Популярность', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/popularity.png` },\n  { name: 'Звезд', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/stars.png` },\n  { name: 'Территорий', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/territories.png` },\n  { name: 'Ресурсов', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/resources.png` },\n  { name: 'Бонусов зданий', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/structureBonus.png` },\n  { name: 'Монет', imgPath: `${ process.env.PUBLIC_URL }/assets/icons/resources/gold.png` },\n];\n\nexport const structureBonus = [\n  'Количество территорий с туннелями',\n  'Количество озёр',\n  'Количество территорий с символами приключений',\n  'Количество территорий с туннелями и вашими зданиями',\n  'Количество ваших зданий построенных в один ряд',\n  'Количество тундр и ферм с вашими зданиями',\n];\n\nexport function calculatePoints(points: IPoints): number {\n  let result = 0;\n\n  if (points.popularity >= 0 && points.popularity <= 6) {\n    result = (points.stars * 3) + (points.territories * 2) + Math.floor(points.resources / 2) + points.buildingBonuses + points.gold;\n  } else if (points.popularity >= 7 && points.popularity <= 12) {\n    result = (points.stars * 4) + (points.territories * 3) + Math.floor(points.resources / 2) * 2 + points.buildingBonuses + points.gold;\n  } else if (points.popularity >= 13 && points.popularity <= 18) {\n    result = (points.stars * 5) + (points.territories * 4) + Math.floor(points.resources / 2) * 3 + points.buildingBonuses + points.gold;\n  }\n\n  return result;\n}\n\nexport function findPlayerByFaction(players: IPlayer[], searchWord: string): IPlayer {\n  return players.find(item => findEngNameFactionToUrl(item.faction) === searchWord) as IPlayer;\n}\n\nexport function findEngNameFactionToUrl(faction: string = ''): string {\n  const dictionaryByFactionNames = keyBy(factions, 'name');\n  return dictionaryByFactionNames[faction].slug ? dictionaryByFactionNames[faction].slug : '';\n}\n\nexport function getShortNameFaction(faction: string = ''): string {\n  const dictionaryByFactionNames = keyBy(factions, 'name');\n  return dictionaryByFactionNames[faction].shortName ? dictionaryByFactionNames[faction].shortName : '';\n}\n\nexport function getLastAddedFaction(players: IPlayer[]): string {\n  if (players.length <= 0) return '';\n  const lastAddedPlayer = players[players.length - 1];\n  return findEngNameFactionToUrl(lastAddedPlayer.faction);\n}\n\nexport function getRouteLastAddedPlayer(players: IPlayer[]) {\n  const lastAddedPlayer = players[players.length - 1];\n  const homePage = clearPath(routes['index'].path);\n  return `${ homePage }${ findEngNameFactionToUrl(lastAddedPlayer.faction) }`;\n}\n\nexport function findFactionWhoHasFirstTurn(players: IPlayer[]): string {\n  for (const mat of mats) {\n    const playerFirstTurn = players.find(player => player.mat === mat.name);\n    if (playerFirstTurn) {\n      return findEngNameFactionToUrl(playerFirstTurn.faction);\n    }\n  }\n  return '';\n}\n\nexport function foundPrevNextPlayers(players: IPlayer[] = [], player: IPlayer) {\n  const currentIndex = players.findIndex(item => item.id === player.id);\n\n  const last = players[players.length - 1];\n  const first = players[0];\n\n  const prevPlayer = currentIndex >= 0 && players[currentIndex - 1] ? players[currentIndex - 1] : last;\n  const nextPlayer = currentIndex >= 0 && players[currentIndex + 1] ? players[currentIndex + 1] : first;\n\n  return {\n    prevPlayer,\n    nextPlayer,\n  };\n}\n\nexport function foundPlayerIndexByFaction(players: IPlayer[], searchFaction: FactionType) {\n  const factions = players.map(player => findEngNameFactionToUrl(player.faction));\n  const index = factions.findIndex(faction => faction === searchFaction);\n  return index <= 0 ? 0 : index;\n}\n","export default __webpack_public_path__ + \"static/media/bg.2905f7ce.jpg\";","import { Button, Container, Grid, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ButtonInstallPWA } from '../components/ButtonInstallPWA';\nimport { addPlayer } from '../features/players/playersSlice';\nimport Image from '../img/bg.jpg';\n\nconst useStyles = makeStyles({\n  container: {\n    height: '100vh',\n    paddingBottom: '12vh',\n  },\n  paperContainer: {\n    backgroundColor: '#acacac',\n    backgroundImage: `url(${ Image })`,\n    height: '100%',\n    backgroundPosition: 'top center',\n    backgroundSize: 'cover',\n  },\n  logo: {\n    marginTop: 20,\n    width: 120,\n    height: 120,\n  },\n  title: {\n    paddingTop: 60,\n    fontWeight: 'bold',\n    color: '#fff',\n    fontSize: 46,\n    textShadow: '0 2px 3px rgba(0, 0, 0, 0.4), 0 8px 14px rgba(0, 0, 0, 0.1), 0 18px 30px rgba(0, 0, 0, 0.1)',\n  },\n  btnAddPlayer: {\n    marginTop: 'auto',\n  },\n});\n\nconst First: FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Paper className={ classes.paperContainer } elevation={ 0 } square={ true } variant={ 'outlined' }>\n        <Container fixed>\n          <Grid\n            className={ classes.container }\n            container\n            direction=\"column\"\n            justify={ 'center' }\n            alignItems={ 'center' }\n            spacing={ 2 }\n          >\n            <Grid item>\n              <Typography align={ 'center' } className={ classes.title }>\n                Scythe Score Calculator\n              </Typography>\n            </Grid>\n\n            <Grid className={ classes.btnAddPlayer } item>\n              <Button\n                variant=\"contained\" color=\"secondary\" fullWidth\n                onClick={ () => dispatch(addPlayer()) }\n              >\n                Добавить игрока\n              </Button>\n            </Grid>\n\n            <Grid item>\n              <ButtonInstallPWA />\n            </Grid>\n          </Grid>\n        </Container>\n      </Paper>\n    </>\n  );\n};\n\nexport default First;\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteAllPlayers } from '../features/players/playersSlice';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ ref } { ...props } />;\n});\n\nexport const ButtonNewGame = () => {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCreateNewGame = () => {\n    dispatch(deleteAllPlayers());\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        onClick={ handleClickOpen }\n      >\n        Новая игра\n      </Button>\n\n      <Dialog\n        open={ open }\n        TransitionComponent={ Transition }\n        keepMounted\n        onClose={ handleClose }\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{ 'Создать новую игру?' }</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Все данные в текущей игре будут удалены.\n            <br />\n            Отменить это действие будет невозможно.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={ handleClose } color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={ handleCreateNewGame } color=\"secondary\">\n            Создать\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\ntype Props = {\n  name: string;\n  iconPath?: string;\n}\n\nconst FactionIcon: FC<Props> = (props) => {\n  const { name, iconPath } = props;\n\n  if (!iconPath) return null;\n\n  return (\n    <img height={ 35 } width={ 35 } src={ iconPath } alt={ name } />\n  );\n};\n\nexport default FactionIcon;\n","import { Badge } from '@material-ui/core';\nimport green from '@material-ui/core/colors/green';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport React, { FC } from 'react';\nimport { factions } from '../common/scytheLogic';\nimport { IPlayer } from '../features/players/types';\nimport FactionIcon from './FactionIcon';\n\ntype FactionIconType = {\n  player: IPlayer\n}\n\nexport const FactionIconWithBadge: FC<FactionIconType> = ({ player }) => {\n  const getIconPath = (player: IPlayer) => factions.find(i => i.name === player.faction)?.iconPath;\n\n  return (\n    <Badge\n      invisible={ player.points <= 0 }\n      overlap=\"circle\"\n      color=\"default\"\n      badgeContent={ <CheckCircleIcon style={ { fontSize: 16, color: green[400] } } /> }\n    >\n      <FactionIcon name={ player.faction } iconPath={ getIconPath(player) } />\n    </Badge>\n  );\n};\n","import Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { FC } from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    width: '100%',\n    margin: '0 auto',\n    '@media (min-width: 600px)': {\n      maxWidth: '100%',\n    },\n    '@media (min-width: 960px)': {\n      maxWidth: 960,\n    },\n    '@media (min-width: 1280px)': {\n      maxWidth: 1280,\n    },\n  },\n});\n\ntype Props = {\n  index: any;\n  value: any;\n  children?: React.ReactNode;\n  dir?: string;\n}\n\nexport const TabPanel: FC<Props> = (props) => {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <div\n      className={ classes.root }\n      role=\"tabpanel\"\n      hidden={ value !== index }\n      id={ `full-width-tabpanel-${ index }` }\n      aria-labelledby={ `full-width-tab-${ index }` }\n      { ...other }\n    >\n      { value === index && (\n        <Box p={ 2 }>\n          { children }\n        </Box>\n      ) }\n    </div>\n  );\n};\n","import { AppBar, Paper, Tab, Tabs, Toolbar } from '@material-ui/core';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport React, { FC, ReactNode, useEffect } from 'react';\nimport { Link, useHistory, useParams, useRouteMatch } from 'react-router-dom';\nimport SwipeableViews from 'react-swipeable-views';\nimport { factions, FactionType, findEngNameFactionToUrl, foundPlayerIndexByFaction } from '../common/scytheLogic';\nimport { clearPath } from '../common/utils';\nimport { IPlayer } from '../features/players/types';\nimport { routes } from '../routes';\nimport { AppMenuNavigation } from './AppMenuNavigation';\nimport { FactionIconWithBadge } from './FactionIconWithBadge';\nimport { TabPanel } from './TabPanel';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    height: '100%',\n    paddingTop: 65,\n    paddingBottom: 55,\n  },\n  tab: {\n    padding: '3px 6px',\n    fontSize: '12px',\n    fontWeight: 300,\n    textTransform: 'initial',\n    opacity: 0.4,\n    minHeight: 65,\n    color: theme.palette.text.primary,\n  },\n  swipeableViews: { height: '100%' },\n}));\n\n\ntype Props = {\n  players: IPlayer[];\n  children: ReactNode;\n  faction?: FactionType;\n}\n\nexport const FullWidthTabs: FC<Props> = ({ children, players }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { id: faction } = useParams<{ id: FactionType }>();\n\n  const [value, setValue] = React.useState(foundPlayerIndexByFaction(players, faction));\n\n  const history = useHistory();\n  let factionUrl = useRouteMatch(routes.index.path);\n  let scoreUrl = useRouteMatch(routes.score.path);\n  const url = factionUrl?.path || scoreUrl?.path || '';\n\n  const handleChange = (event: React.ChangeEvent<{}>, value: number) => {\n    setValue(value);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    if (index < players.length) {\n      setValue(index);\n      history.push(`${ clearPath(url) }${ findEngNameFactionToUrl(players[index].faction) }`);\n    }\n  };\n\n  useEffect(() => {\n    setValue(foundPlayerIndexByFaction(players, faction));\n  }, [faction]);\n\n  const getLabel = (player: IPlayer) => factions.find(i => i.name === player.faction)?.shortName;\n\n  return (\n    <Paper className={ classes.paper }>\n      <AppBar className={ classes.root } position=\"fixed\">\n        <div className=\"container\">\n          <Toolbar>\n            <Tabs\n              value={ value }\n              onChange={ handleChange }\n              scrollButtons=\"auto\"\n              variant=\"scrollable\"\n              indicatorColor=\"secondary\"\n            >\n              { players.map((player: IPlayer) => (\n                <Tab\n                  key={ player.faction }\n                  component={ Link }\n                  className={ clsx(classes.tab, 'faction-tab') }\n                  label={ getLabel(player) }\n                  icon={ <FactionIconWithBadge player={ player } /> }\n                  to={ `${ clearPath(url) }${ findEngNameFactionToUrl(player.faction) }` }\n                />\n              )) }\n            </Tabs>\n          </Toolbar>\n        </div>\n      </AppBar>\n\n      <SwipeableViews\n        threshold={ 2 }\n        hysteresis={ 0.1 }\n        resistance\n        className={ classes.swipeableViews }\n        axis={ theme.direction === 'rtl' ? 'x-reverse' : 'x' }\n        index={ value }\n        onChangeIndex={ handleChangeIndex }\n      >\n        { players.map((player, index) => (\n          <TabPanel key={ player.faction } value={ value } index={ index } dir={ theme.direction }>\n            { children }\n          </TabPanel>\n        )) }\n      </SwipeableViews>\n\n      <AppMenuNavigation />\n    </Paper>\n  );\n};\n","import { CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n  media: {\n    objectPosition: '50% 25%',\n    height: '25vh',\n    minHeight: 140,\n  },\n});\n\ntype Props = {\n  name?: string,\n  characterPath?: string\n};\n\nconst FactionCharacterImage: React.FC<Props> = (props) => {\n  const { name = '', characterPath = '' } = props;\n  const classes = useStyles();\n\n  return (\n    <CardMedia\n      component=\"img\"\n      className={ classes.media }\n      image={ characterPath }\n      alt={ name }\n      title={ name }\n    />\n  );\n};\n\nexport default FactionCharacterImage;\n","import { createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { RootState } from '../../app/rootReducer';\nimport { factionsMoveOrder, findEngNameFactionToUrl, mats } from '../../common/scytheLogic';\nimport { IPlayer } from './types';\n\nexport const getPlayers = (state: RootState) => Object.values(state.players);\n\nexport const getPlayerWhoHasFirstTurn = createSelector(\n  [getPlayers],\n  (players: IPlayer[]) => {\n    for (const mat of mats) {\n      const playerFirstTurn = players.find(player => player.mat === mat.name);\n      if (playerFirstTurn) {\n        return playerFirstTurn;\n      }\n    }\n    return null;\n  });\n\nexport const getPlayersSortByFirstTurn = createSelector(\n  [getPlayers, getPlayerWhoHasFirstTurn],\n  (players: IPlayer[], player: IPlayer | null) => {\n    const playerFirstTurnIndex = factionsMoveOrder.indexOf(player?.faction as string);\n    let turnOrder: (string | undefined)[] = [];\n\n    const isFound = playerFirstTurnIndex !== -1;\n\n    if (isFound) {\n      const reversedMoveOrder = factionsMoveOrder\n        .map((item, index) => {\n          return _.nth(factionsMoveOrder, playerFirstTurnIndex - index);\n        })\n        .filter(faction => players.find(it => it.faction === faction));\n      const fistElement = reversedMoveOrder.slice(0, 1);\n      const other = reversedMoveOrder.slice(1, reversedMoveOrder.length).reverse();\n      turnOrder = [...fistElement, ...other];\n    }\n\n    return turnOrder.map(item => players.find(player => player.faction === item)) as IPlayer[];\n  });\n\nexport const getPlayerByFaction = (faction: string) => createSelector(\n  [getPlayers],\n  (players: IPlayer[]) => {\n    return players.find(item => findEngNameFactionToUrl(item.faction) === faction);\n  },\n);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface INames {\n  name: string;\n  inputValue?: string;\n}\n\nconst initialState: INames[] = [];\n\nconst namesSlice = createSlice({\n  name: 'names',\n  initialState,\n  reducers: {\n    addName(state, action: PayloadAction<INames>) {\n      state.push(action.payload);\n    },\n    deleteName(state, action: PayloadAction<string>) {\n      return state.filter(({ name }) => name !== action.payload);\n    },\n    changeName(state, action: PayloadAction<string>) {\n      return state.map(obj => {\n\n        if (obj.name === action.payload) {\n          return { ...obj, name: action.payload };\n        }\n\n        return obj;\n      });\n    },\n  },\n});\n\nexport const {\n  addName,\n  deleteName,\n  changeName,\n} = namesSlice.actions;\n\nexport default namesSlice.reducer;\n","import { RootState } from '../../app/rootReducer';\n\nexport const getNames = (state: RootState) => state.names;\n","import { Divider, IconButton, TextField } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Slide from '@material-ui/core/Slide';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { editPlayer } from '../players/playersSlice';\nimport { getPlayerByFaction } from '../players/selectors';\nimport { addName, changeName, deleteName, INames } from './namesSlice';\nimport { getNames } from './selectors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    dialogPaper: {\n      backgroundColor: theme.palette.background.default,\n    },\n    list: {\n      backgroundColor: theme.palette.background.paper,\n      cursor: 'pointer',\n    },\n    title: {\n      paddingLeft: 18,\n      fontSize: 14,\n      fontWeight: 'bold',\n    },\n    item: {\n      display: 'flex',\n      width: '100%',\n      height: 30,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    sectionText: { padding: '110px 15px 0 15px' },\n    listItem: {\n      paddingRight: 0,\n      '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        transition: 'all .2s',\n      },\n    },\n  }),\n);\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ ref } { ...props } />;\n});\n\nconst filter = createFilterOptions<INames>();\n\nexport function FullScreenDialogPlayerName() {\n  const classes = useStyles();\n  const { id } = useParams<{ id: string }>();\n  const names = useSelector(getNames);\n  const dispatch = useDispatch();\n  const player = useSelector(getPlayerByFaction(id));\n\n  const [open, setOpen] = React.useState(false);\n\n  const {\n    getInputProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'use-autocomplete-names',\n    options: names,\n    value: player?.name as unknown as INames,\n    debug: true,\n    getOptionLabel: (option) => {\n      if (typeof option === 'string') {\n        return option;\n      }\n      if (option.inputValue) {\n        return option.inputValue;\n      }\n      return option.name;\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const isNameNotEmpty = params.inputValue !== '';\n      const isNameUnique = params.inputValue !== player?.name;\n      const isNameExist = names.findIndex(i => i.name === params.inputValue) === -1;\n      if (isNameNotEmpty && isNameUnique && isNameExist) {\n        filtered.push({\n          inputValue: params.inputValue,\n          name: `Добавить «${ params.inputValue }»`,\n        });\n      }\n\n      return filtered;\n    },\n    onChange: (event, newValue) => {\n      if (typeof newValue === 'string') {\n        createName({\n          name: newValue,\n        });\n      } else if (newValue && newValue.inputValue) {\n        createName({\n          // Срабатывает, когда вводим имя\n          name: newValue.inputValue,\n        });\n      } else if (newValue) {\n        if (player?.name === newValue.name) {\n          return;\n        }\n        // Срабатывает, когда выбираем уже из доступных имен\n        setName({ name: newValue.name });\n      }\n    },\n  });\n\n  const createName = (obj: INames) => {\n    dispatch(addName(obj));\n    if (player?.id) {\n      dispatch(editPlayer({ ...player, name: obj.name }));\n    }\n\n    setOpen(false);\n  };\n\n  const setName = (obj: INames) => {\n    dispatch(changeName(obj.name));\n    if (player?.id) {\n      dispatch(editPlayer({ ...player, name: obj.name }));\n    }\n\n    setOpen(false);\n  };\n\n  const handleDeleteName = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, name: string) => {\n    dispatch(deleteName(name));\n    event.stopPropagation();\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleFocus = (event: any) => {\n    event.target.select();\n  };\n\n  return (\n    <>\n      <TextField\n        value={ player?.name || 'Player' }\n        label=\"Имя\"\n        variant=\"outlined\"\n        size=\"medium\"\n        fullWidth\n        onChange={ handleClickOpen }\n        onClick={ handleClickOpen }\n        inputProps={ {\n          disabled: true,\n          style: { pointerEvents: 'none' },\n        } }\n      />\n\n      <Dialog\n        fullScreen\n        open={ open }\n        onClose={ handleClose }\n        TransitionComponent={ Transition }\n        PaperProps={ { className: classes.dialogPaper } }\n      >\n        <AppBar position={ 'fixed' } color={ 'inherit' } style={ { padding: '15px 0 10px 0' } }>\n          <Grid container direction={ 'column' } spacing={ 2 }>\n            <Grid container justify={ 'space-between' } alignItems={ 'center' } spacing={ 0 }>\n              <Grid item xs />\n              <Grid item xs>\n                <Typography variant=\"h5\" className={ classes.title }>\n                  Имя\n                </Typography>\n              </Grid>\n              <Grid item style={ { paddingRight: 15 } }>\n                <Button color=\"primary\" onClick={ handleClose }>\n                  готово\n                </Button>\n              </Grid>\n            </Grid>\n\n            <Divider />\n\n            <Grid item style={ { padding: '5px 20px' } }>\n              <TextField { ...getInputProps() } fullWidth autoFocus onFocus={ handleFocus } />\n            </Grid>\n          </Grid>\n        </AppBar>\n\n        <Typography className={ classes.sectionText } variant={ 'overline' }>\n          Выберите вариант или создайте\n        </Typography>\n\n        { (names.length > 0 || groupedOptions.length > 0) &&\n        <List className={ classes.list } disablePadding>\n          <Divider />\n          {\n            groupedOptions.length > 0\n              ? groupedOptions.map((option, index) => (\n                <React.Fragment key={ option.name + index }>\n                  <ListItem className={ classes.listItem } { ...getOptionProps({ option, index }) }>\n                    { renderItem(option) }\n                  </ListItem>\n                  <Divider />\n                </React.Fragment>\n              ))\n              : names.map((item, index) => (\n                <React.Fragment key={ item.name + index }>\n                  <ListItem className={ classes.listItem } onClick={ () => setName({ name: item.name }) }>\n                    { renderItem(item) }\n                  </ListItem>\n                  <Divider />\n                </React.Fragment>\n              ))\n          }\n        </List>\n        }\n      </Dialog>\n    </>\n  );\n\n  function renderItem(option: INames) {\n    return (\n      <div className={ classes.item }>\n        <p>{ option.name }</p>\n\n        { !option.inputValue &&\n        <IconButton aria-label=\"delete\" onClick={ (event) => handleDeleteName(event, option.name) }>\n          <DeleteIcon fontSize=\"small\" />\n        </IconButton> }\n      </div>\n    );\n  }\n}\n","import { Button, Card, CardActions, CardContent, Collapse, IconButton, MenuItem } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport clsx from 'clsx';\nimport React, { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { factions, FactionType, mats } from '../../common/scytheLogic';\nimport FactionCharacterImage from '../../components/FactionCharacterImage';\nimport FactionIcon from '../../components/FactionIcon';\nimport { FullScreenDialogPlayerName } from '../names/FullScreenDialogPlayerName';\nimport { changeFieldInPlayer, deletePlayer } from './playersSlice';\nimport { getPlayerByFaction } from './selectors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: 370,\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    cardActions: {\n      paddingBottom: 0,\n      paddingTop: 0,\n    },\n    cardContent: {\n      paddingTop: 0,\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    matImage: {\n      width: '100%',\n      height: 'auto',\n    },\n  }),\n);\n\nexport const PlayerCard: FunctionComponent = () => {\n  const { id: faction } = useParams<{ id: FactionType }>();\n  const player = useSelector(getPlayerByFaction(faction));\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  if (!player?.id) return null;\n\n  const handleChangeFaction = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    dispatch(changeFieldInPlayer('faction', event.target.value, player.id));\n  };\n\n  const handleChangeMat = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    dispatch(changeFieldInPlayer('mat', event.target.value, player.id));\n  };\n\n  const handleDeletePlayer = () => {\n    dispatch(deletePlayer(player.id));\n  };\n\n  return (\n    <Card className={ classes.root }>\n      <FactionCharacterImage { ...factions.find(i => i.name === player.faction) } />\n      <CardContent>\n        <Grid container spacing={ 2 } direction={ 'row' }>\n          <Grid item xs={ 12 } sm={ 6 }>\n            <FullScreenDialogPlayerName />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              select\n              SelectProps={ {\n                renderValue: (value: any) => {\n                  const faction = factions.find(i => i.name === value);\n                  return (\n                    <div\n                      style={ {\n                        display: 'flex',\n                        alignItems: 'center',\n                      } }\n                    >\n                      { faction && <FactionIcon { ...faction } /> }\n                    </div>);\n                },\n              } }\n              label=\"Фракция\"\n              value={ player.faction }\n              onChange={ handleChangeFaction }\n              variant=\"outlined\"\n              size=\"small\"\n            >\n              { factions.map((value) => (\n                <MenuItem key={ value.name } value={ value.name }>\n                  <FactionIcon { ...value } />&nbsp;&nbsp;&nbsp;{ value.name }\n                </MenuItem>\n              )) }\n            </TextField>\n          </Grid>\n\n          <Grid item xs>\n            <TextField\n              select\n              label=\"Планшет\"\n              value={ player.mat }\n              onChange={ handleChangeMat }\n              variant=\"outlined\"\n              size=\"medium\"\n              fullWidth\n            >\n              { mats.map((mat) => (\n                <MenuItem key={ mat.name } value={ mat.name }>\n                  { mat.name }\n                </MenuItem>\n              )) }\n            </TextField>\n          </Grid>\n        </Grid>\n      </CardContent>\n\n      <CardActions disableSpacing className={ classes.cardActions }>\n        <Button\n          color=\"secondary\"\n          size=\"medium\"\n          onClick={ handleDeletePlayer }\n        >\n          Удалить\n        </Button>\n\n        <IconButton\n          className={ clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          }) }\n          onClick={ handleExpandClick }\n          aria-expanded={ expanded }\n          aria-label=\"show mat\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n\n      <Collapse in={ expanded } timeout=\"auto\" unmountOnExit>\n        <CardContent className={ classes.cardContent }>\n          <img\n            className={ classes.matImage }\n            src={ `${ mats.find(mat => mat.name === player.mat)?.imgPath }` }\n            alt={ player.mat }\n          />\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { FactionType, getRouteLastAddedPlayer, TOTAL_PLAYERS } from '../common/scytheLogic';\nimport { ButtonNewGame } from '../components/ButtonNewGame';\nimport { FullWidthTabs } from '../components/FullWidthTabs';\nimport { PlayerCard } from '../features/players/PlayerCard';\nimport { addPlayer } from '../features/players/playersSlice';\nimport { getPlayers } from '../features/players/selectors';\n\nconst Home: FunctionComponent = () => {\n  const players = useSelector(getPlayers);\n  const dispatch = useDispatch();\n\n  const { id: faction } = useParams<{ id: FactionType }>();\n\n  if (!faction && players.length) {\n    return <Redirect to={ getRouteLastAddedPlayer(players) } />;\n  }\n\n  if (!players.length) {\n    return <Redirect to={ '/' } />;\n  }\n\n  return (\n    <FullWidthTabs players={ players } faction={ faction }>\n      <PlayerCard />\n\n      <Grid container direction=\"column\" spacing={ 2 } justify={ 'center' } style={ { paddingTop: 20 } }>\n        <Grid item>\n          <Button\n            variant=\"contained\" disabled={ players.length >= TOTAL_PLAYERS } color=\"secondary\" fullWidth\n            onClick={ () => dispatch(addPlayer()) }\n          >\n            Добавить игрока\n          </Button>\n        </Grid>\n\n        <Grid item>\n          <ButtonNewGame />\n        </Grid>\n      </Grid>\n    </FullWidthTabs>\n  );\n};\n\nexport default Home;\n","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getShortNameFaction, resources } from '../common/scytheLogic';\nimport { ButtonNewGame } from '../components/ButtonNewGame';\nimport MainLayout from '../components/MainLayout';\nimport { getPlayers } from '../features/players/selectors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      borderCollapse: 'separate',\n      minWidth: 320,\n    },\n    sticky: {\n      position: 'sticky',\n      background: theme.palette.background.paper,\n      left: 0,\n      zIndex: 1,\n    },\n    resourceIcon: {\n      verticalAlign: 'middle',\n    },\n  }),\n);\n\nconst Result: FC = () => {\n  const classes = useStyles();\n  const players = useSelector(getPlayers);\n\n  const playersByWinningPosition = players\n    .sort((a, b) => b.points - a.points)\n    .map((player, index) => ({ ...player, gameEndPosition: index + 1 }));\n\n  return (\n    <MainLayout>\n\n      <TableContainer component={ Paper }>\n        <Table className={ classes.root } size=\"small\">\n          { renderTableHeader() }\n          { renderTableBody() }\n        </Table>\n      </TableContainer>\n\n      <br />\n\n      <ButtonNewGame />\n\n    </MainLayout>\n  );\n\n  function renderTableHeader() {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"center\" size={ 'small' }>№</TableCell>\n          <TableCell className={ classes.sticky }>Игрок</TableCell>\n          {\n            resources.map(resource => (\n              <TableCell align=\"center\" key={ resource.name }>\n                <img className={ classes.resourceIcon } width={ 30 } height={ 30 } src={ resource.imgPath } alt={ resource.name } />\n              </TableCell>\n            ))\n          }\n          <TableCell align=\"center\">Всего</TableCell>\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  function renderTableBody() {\n    return (\n      <TableBody>\n        { playersByWinningPosition.map(({\n          buildingBonuses,\n          faction,\n          gameEndPosition,\n          gold,\n          mat,\n          name,\n          points,\n          popularity,\n          resources,\n          stars,\n          territories,\n          id,\n        }) => (\n          <TableRow key={ id }>\n            <TableCell align=\"center\">{ gameEndPosition }</TableCell>\n            <TableCell className={ classes.sticky } component=\"th\" scope=\"player\" size={ 'small' }>\n              { name }\n              <br />\n              { getShortNameFaction(faction) }\n              <br />\n              { mat }\n            </TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ popularity }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ stars }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ territories }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ resources }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ buildingBonuses }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ gold }</TableCell>\n            <TableCell size={ 'small' } align=\"center\">{ points }</TableCell>\n          </TableRow>\n        )) }\n      </TableBody>\n    );\n  }\n};\n\nexport default Result;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport StarIcon from '@material-ui/icons/Star';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { IPlayer, IPoints } from './types';\n\nconst text = {\n  integer: 'Значение должно быть целым числом',\n  min: `Значение не может быть отрицательным`,\n  max: (max: number) => `Значение не может быть больше ${ max }`,\n};\n\nconst schema = yup.object().shape({\n  gold: yup\n    .number().required().min(0, text.min)\n    .integer(text.integer)\n    .typeError('Введите накопленные монеты'),\n  popularity: yup\n    .number().required().min(0, text.min).max(18, text.max(18))\n    .integer(text.integer)\n    .typeError('Введите накопленную популярность'),\n  stars: yup\n    .number().required().min(0, text.min).max(6, text.max(6))\n    .integer(text.integer)\n    .typeError('Введите накопленные звезды'),\n  territories: yup\n    .number().required().min(0, text.min)\n    .integer(text.integer)\n    .typeError('Введите кол-во контролируемых территорий'),\n  resources: yup\n    .number().required().min(0, text.min)\n    .integer(text.integer)\n    .typeError('Введите кол-во контролируемых ресурсов'),\n  buildingBonuses: yup\n    .number().required().min(0, text.min).max(9, text.max(9))\n    .integer(text.integer)\n    .typeError('Введите кол-во монет за бонус зданий'),\n});\n\nexport const ScoreForm = (props: {\n  player: IPlayer;\n  saveData: (formData: IPoints) => {};\n}) => {\n  const { player, saveData } = props;\n  const { register, handleSubmit, errors, reset } = useForm<IPoints>({\n    defaultValues: {\n      gold: player.gold,\n      popularity: player.popularity,\n      stars: player.stars,\n      territories: player.territories,\n      resources: player.resources,\n      buildingBonuses: player.buildingBonuses,\n    },\n    mode: 'onSubmit',\n    resolver: yupResolver(schema),\n  });\n\n  useEffect(() => {\n    if (!player.gold &&\n      !player.popularity &&\n      !player.stars &&\n      !player.territories &&\n      !player.resources &&\n      !player.buildingBonuses) {\n      reset({\n        gold: undefined,\n        popularity: undefined,\n        stars: undefined,\n        territories: undefined,\n        resources: undefined,\n        buildingBonuses: undefined,\n      });\n    } else {\n      reset(player);\n    }\n  }, [reset, player]);\n\n  const onSubmit = (formData: IPoints) => {\n    saveData(formData);\n  };\n\n  const handleOnFocus = (event: React.FocusEvent<any>): void => {\n    event.target.select();\n  };\n\n  return (\n    <form onSubmit={ handleSubmit(onSubmit) } autoComplete=\"off\" noValidate>\n      <Grid container direction={ 'column' } spacing={ 2 }>\n        <Grid item>\n          <TextField\n            error={ !!errors.gold }\n            helperText={ (errors?.gold as any)?.message }\n            inputRef={ register }\n            id=\"gold\"\n            name=\"gold\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Монеты на руках\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <MonetizationOnIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            error={ !!errors.popularity }\n            helperText={ (errors?.popularity as any)?.message }\n            inputRef={ register }\n            id=\"popularity\"\n            name=\"popularity\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Популярность\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FavoriteIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            error={ !!errors.stars }\n            helperText={ (errors?.stars as any)?.message }\n            inputRef={ register }\n            id=\"stars\"\n            name=\"stars\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Кол-во звезд\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <StarIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            error={ !!errors.territories }\n            helperText={ (errors?.territories as any)?.message }\n            inputRef={ register }\n            id=\"territories\"\n            name=\"territories\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Территорий (фабрика дает +3)\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <TerrainIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            error={ !!errors.resources }\n            helperText={ (errors?.resources as any)?.message }\n            inputRef={ register }\n            id=\"resources\"\n            name=\"resources\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Всего ресурсов (каждый ресурс)\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <DonutLargeIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            error={ !!errors.buildingBonuses }\n            helperText={ (errors?.buildingBonuses as any)?.message }\n            inputRef={ register }\n            id=\"buildingBonuses\"\n            name=\"buildingBonuses\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Бонусы зданий\"\n            type=\"number\"\n            onFocus={ handleOnFocus }\n            InputProps={ {\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <HomeIcon />\n                </InputAdornment>\n              ),\n            } }\n          />\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems={ 'center' } justify={ 'space-between' } spacing={ 2 }>\n            <Grid item xs={ 12 }>\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth>Подсчитать</Button>\n            </Grid>\n\n            { player?.points\n              ? <Grid item><Typography variant={ 'h6' }>Очков: { player?.points }</Typography></Grid>\n              : null\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { FactionType, foundPrevNextPlayers } from '../common/scytheLogic';\nimport { FullWidthTabs } from '../components/FullWidthTabs';\nimport { scoreFormSubmit } from '../features/players/playersSlice';\nimport { ScoreForm } from '../features/players/ScoreForm';\nimport { getPlayerByFaction, getPlayersSortByFirstTurn } from '../features/players/selectors';\nimport { IPlayer, IPoints } from '../features/players/types';\nimport NotFound from './NotFound';\n\nconst Score = () => {\n  const { id: faction } = useParams<{ id: FactionType }>();\n  const players = useSelector(getPlayersSortByFirstTurn);\n  const player = useSelector(getPlayerByFaction(faction));\n  const dispatch = useDispatch();\n\n  const { nextPlayer } = foundPrevNextPlayers(players, player as IPlayer);\n\n  if (!player || !players) return <NotFound />;\n\n  const handleOnSubmit = (formData: IPoints) => {\n    return dispatch(scoreFormSubmit(player, formData, nextPlayer));\n  };\n\n  return (\n    <>\n      <FullWidthTabs players={ players } faction={ faction }>\n        <Grid container direction={ 'column' } spacing={ 3 } style={ { height: '100%' } }>\n          <Grid item>\n            <Typography variant={ 'h5' }>Игрок: { player.name }</Typography>\n          </Grid>\n\n          <Grid item>\n            <ScoreForm\n              player={ player }\n              saveData={ handleOnSubmit }\n            />\n          </Grid>\n        </Grid>\n      </FullWidthTabs>\n    </>\n  );\n};\n\nexport default Score;\n","import First from './pages/First';\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport Result from './pages/Result';\nimport Score from './pages/Score';\nimport Settings from './pages/Settings';\n\nexport const routes = {\n  'first': {\n    path: '/',\n    title: '',\n    exact: true,\n    component: First,\n  },\n  'index': {\n    path: '/faction/:id?/',\n    title: 'Фракции',\n    exact: false,\n    component: Home,\n  },\n  'score': {\n    path: '/score/:id?/',\n    title: 'Подсчет очков',\n    exact: true,\n    component: Score,\n  },\n  'result': {\n    path: '/result',\n    title: 'Итоги по окончанию игры',\n    exact: true,\n    component: Result,\n  },\n  'map': {\n    path: '/map',\n    title: 'Карта',\n    exact: true,\n    component: NotFound,\n  },\n  'settings': {\n    path: '/settings',\n    title: 'Настройки',\n    exact: true,\n    component: Settings,\n  },\n};\n","import { FormControlLabel, Grid, Link } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React, { FunctionComponent } from 'react';\nimport MainLayout from '../components/MainLayout';\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst Settings: FunctionComponent<Props> = (props) => {\n  const handleChange = () => {}\n\n  return (\n    <MainLayout>\n      <Grid container direction=\"column\">\n        <Grid item>\n            <FormControlLabel\n              control={<Switch checked={false} onChange={handleChange} name=\"checkedA\" />}\n              label=\"Включить захватчики из далеких земель\"\n            />\n        </Grid>\n\n        <Grid item>\n          <Link rel=\"noopener\" href=\"https://github.com/justbenya/scythe-app\">\n            Создано JustBenya — <GitHubIcon fontSize={ 'large' } style={ { color: '#fff' } } />\n          </Link>\n        </Grid>\n\n      </Grid>\n\n    </MainLayout>\n  );\n};\n\nexport default Settings;\n","import { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PeopleIcon from '@material-ui/icons/People';\nimport React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { RootState } from '../app/rootReducer';\nimport { findEngNameFactionToUrl, getLastAddedFaction } from '../common/scytheLogic';\nimport { clearPath } from '../common/utils';\nimport { getPlayerWhoHasFirstTurn } from '../features/players/selectors';\nimport { IPlayer } from '../features/players/types';\nimport { routes } from '../routes';\n\nexport const AppMenuNavigation: FC = () => {\n  const history = useHistory();\n  const players = useSelector<RootState, IPlayer[]>(state => Object.values(state.players));\n  const player = useSelector(getPlayerWhoHasFirstTurn);\n\n  return (\n    <BottomNavigation className=\"menu-footer\" value={ history.location.pathname } showLabels>\n      <BottomNavigationAction\n        icon={ <PeopleIcon /> }\n        component={ Link }\n        label=\"Игроки\"\n        value={ history.location.pathname.includes(clearPath(routes.index.path)) ? history.location.pathname : null }\n        to={ `${ clearPath(routes.index.path) }${ getLastAddedFaction(players) }` }\n      />\n\n      <BottomNavigationAction\n        disabled={ !players.length }\n        icon={ <DonutLargeIcon /> }\n        component={ Link }\n        label=\"Очки\"\n        value={ history.location.pathname.includes(clearPath(routes.score.path)) ? history.location.pathname : null }\n        to={ `${ clearPath(routes.score.path) }${ findEngNameFactionToUrl(player?.faction) }` }\n      />\n\n      <BottomNavigationAction\n        disabled={ !players.length }\n        icon={ <ListAltIcon /> }\n        component={ Link }\n        label=\"Результаты\"\n        value={ routes.result.path }\n        to={ routes.result.path }\n      />\n\n      {/*import SettingsIcon from '@material-ui/icons/Settings';*/}\n      {/*<BottomNavigationAction*/}\n      {/*    icon={ <SettingsIcon /> }*/}\n      {/*    component={ Link }*/}\n      {/*    label=\"Настройки\"*/}\n      {/*    value=\"/settings\"*/}\n      {/*    to=\"/settings\"*/}\n      {/*/>*/}\n    </BottomNavigation>\n  );\n};\n","import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport React, { FC } from 'react';\n// @ts-ignore\nimport useOrientationChange from 'use-orientation-change';\nimport { AppMenuNavigation } from './AppMenuNavigation';\n\nconst useStyles = makeStyles({\n  fixed: {\n    '@media (min-width: 600px)': {\n      maxWidth: '100%',\n    },\n    '@media (min-width: 960px)': {\n      maxWidth: 960,\n    },\n    '@media (min-width: 1280px)': {\n      maxWidth: 1280,\n    },\n  },\n  main: {\n    height: '100%',\n    padding: '20px 0 50px 0',\n  },\n});\n\ntype Props = {\n  [name: string]: any;\n}\n\nconst MainLayout: FC<Props> = (props) => {\n  const { className } = props;\n  const classes = useStyles();\n  const orientation = useOrientationChange();\n\n  return (\n    <>\n      <Container fixed className={ classes.fixed }>\n        <main className={ clsx(classes.main, className) }>{ props.children }</main>\n      </Container>\n\n      { orientation === 'landscape' ? null : <AppMenuNavigation /> }\n    </>\n  );\n};\n\nexport default MainLayout;\n","import { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainLayout from '../components/MainLayout';\n\nconst NotFound: FunctionComponent = () => {\n  return (\n    <MainLayout>\n      <Typography variant={ 'h1' } align={ 'center' }>404?!</Typography>\n      <Button component={ Link } to={ '/' } variant=\"outlined\" color=\"primary\" fullWidth>\n        Вернуться на главную\n      </Button>\n    </MainLayout>\n  );\n};\n\nexport default NotFound;\n","import { createMuiTheme, CssBaseline } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeProvider } from '@material-ui/styles';\nimport React, { FunctionComponent } from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport history from '../history';\nimport NotFound from '../pages/NotFound';\nimport { routes } from '../routes';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    secondary: red,\n    primary: {\n      main: '#FFB74D',\n      light: 'rgb(255, 197, 112)',\n      dark: 'rgb(200, 147, 89)',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nconst App: FunctionComponent = () => (\n  <ThemeProvider theme={ theme }>\n    <CssBaseline />\n    <Router history={ history }>\n      <Switch>\n        { Object.values(routes).map((route: any) => <Route key={ route.path } { ...route } />) }\n        <Route component={ NotFound } />\n      </Switch>\n    </Router>\n  </ThemeProvider>\n);\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport names from '../features/names/namesSlice';\nimport players from '../features/players/playersSlice';\n\nconst rootReducer = combineReducers({\n  players,\n  names,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { Action, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { ThunkAction } from 'redux-thunk';\nimport rootReducer, { RootState } from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  version: 2,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport const persistor = persistStore(store);\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n           .register(swUrl)\n           .then((registration) => {\n             registration.onupdatefound = () => {\n               const installingWorker = registration.installing;\n               if (installingWorker == null) {\n                 return;\n               }\n               installingWorker.onstatechange = () => {\n                 if (installingWorker.state === 'installed') {\n                   if (navigator.serviceWorker.controller) {\n                     // At this point, the updated precached content has been fetched,\n                     // but the previous service worker will still serve the older\n                     // content until all client tabs are closed.\n                     console.log(\n                       'New content is available and will be used when all ' +\n                       'tabs for this page are closed. See https://cra.link/PWA.',\n                     );\n\n                     // Execute callback\n                     if (config && config.onUpdate) {\n                       config.onUpdate(registration);\n                     }\n                   } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n\n                     // Execute callback\n                     if (config && config.onSuccess) {\n                       config.onSuccess(registration);\n                     }\n                   }\n                 }\n               };\n             };\n           })\n           .catch((error) => {\n             console.error('Error during service worker registration:', error);\n           });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n             .then((registration) => {\n               registration.unregister();\n             })\n             .catch((error) => {\n               console.error(error.message);\n             });\n  }\n}\n","import { StylesProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './app/App';\nimport store, { persistor } from './app/store';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <PersistGate loading={ null } persistor={ persistor }>\n      <StylesProvider injectFirst>\n        <App />\n      </StylesProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}