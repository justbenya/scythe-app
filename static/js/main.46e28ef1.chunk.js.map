{"version":3,"sources":["context/AppContext.ts","pages/Result.tsx","ScytheLogic.ts","components/ScoreForm.tsx","pages/Score.tsx","context/Types.ts","components/FractionCharacterImage.tsx","components/FractionIcon.tsx","components/PlayerCard.tsx","routes.ts","pages/Start.tsx","components/AppHeader.tsx","components/ToastMessage.tsx","layouts/Main.tsx","pages/NotFound.tsx","App.tsx","context/appReducer.ts","context/AppProvider.tsx","index.tsx"],"names":["AppContext","createContext","players","dispatch","fetchPlayer","fetchPlayers","createPlayer","editPlayer","deletePlayer","clearData","useStyles","makeStyles","table","minWidth","Result","history","useHistory","classes","React","useContext","useEffect","result","Object","values","sort","a","b","points","map","player","index","gameEndPosition","mapKeys","title","TableContainer","component","Paper","Table","className","size","TableHead","TableRow","TableCell","align","TableBody","scope","name","fraction","mat","popularity","stars","territories","resources","buildingBonuses","gold","Button","variant","color","onClick","forEach","setTimeout","push","fractions","slug","characterPath","process","iconPath","mats","foundEngNameFractionToUrl","keyBy","text","max","schema","yup","shape","required","min","integer","typeError","ScoreForm","props","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","reset","handleOnFocus","event","target","select","onSubmit","data","Math","floor","calculatePoints","autoComplete","Grid","container","direction","spacing","item","TextField","error","helperText","message","inputRef","id","fullWidth","label","type","onFocus","InputProps","startAdornment","InputAdornment","position","alignItems","justify","Typography","Types","Score","searchWord","find","foundPlayer","match","params","prevPlayer","nextPlayer","length","sorted","parseInt","slice","currentIndex","findIndex","xs","sm","style","textAlign","IconButton","disabled","Boolean","Link","to","edge","routes","path","media","objectPosition","FractionCharacterImage","CardMedia","height","image","alt","FractionIcon","src","PlayerCard","Card","i","CardContent","preventDefault","defaultValue","onChange","changesPlayers","value","handleChangeName","SelectProps","renderValue","display","newFraction","prevFraction","isNewFractionSelect","handleChangeFraction","MenuItem","newMat","prevMat","isNewMatSelect","handleChangeMat","CardActions","disableSpacing","paddingTop","justifyContent","marginRight","handleDeletePlayer","exact","playerFirstTurn","theme","createStyles","toolbar","marginLeft","AppHeader","AppBar","Toolbar","location","pathname","aria-label","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","fixed","maxWidth","Main","CssBaseline","ToastMessage","Container","children","NotFound","App","basename","route","appReducer","state","action","FETCH_PLAYERS","payload","FETCH_PLAYER","CREATE_PLAYER","EDIT_PLAYER","DELETE_PLAYER","omit","CLEAR_PLAYERS_DATA","shuffle","array","randIndex","random","temp","AppProvider","useReducer","useLocalStorage","storagePlayers","writeStorage","Provider","toast","progress","undefined","success","usedFraction","usedMats","randomFractions","filter","includes","randomMats","nanoid","formValues","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46e28ef1.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { IPlayer } from '../ScytheLogic';\nimport { Action} from './Types';\n\nexport type SpecType = {\n    [id: string]: IPlayer\n}\n\ntype AppContextType = {\n    players: SpecType;\n    dispatch: React.Dispatch<Action>;\n    fetchPlayer(id: string): void;\n    fetchPlayers(): void;\n    createPlayer(): void;\n    editPlayer(formValues: any): void;\n    deletePlayer(id: string): void;\n    clearData(): void;\n}\n\nconst AppContext = createContext<AppContextType>({\n    players: {},\n    dispatch: () => null,\n    fetchPlayer: () => {},\n    fetchPlayers: () => {},\n    createPlayer: () => {},\n    editPlayer: () => {},\n    deletePlayer: () => {},\n    clearData: () => {},\n});\n\nexport default AppContext;\n","import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport mapKeys from 'lodash-es/mapKeys';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\nimport Main from '../layouts/Main';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 320,\n    },\n});\n\nconst Result: FunctionComponent = () => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    let {\n        players,\n        fetchPlayers,\n        clearData,\n        editPlayer,\n    } = React.useContext(AppContext);\n\n    useEffect(() => {\n        fetchPlayers();\n    }, []);\n\n    const sortedPlayers = [...Object.values(players)].sort((a, b) => b.points - a.points);\n    const result = sortedPlayers.map((player, index) => ({ ...player, gameEndPosition: index + 1 }));\n\n    players = { ...mapKeys(result, 'id') };\n\n    return (\n        <Main title={ 'Итоги по окончанию игры' }>\n            <TableContainer component={ Paper }>\n                <Table className={ classes.table } size=\"medium\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Место</TableCell>\n                            <TableCell>Фракция</TableCell>\n                            <TableCell align=\"right\">Популярность</TableCell>\n                            <TableCell align=\"right\">Звезд</TableCell>\n                            <TableCell align=\"right\">Территорий</TableCell>\n                            <TableCell align=\"right\">Ресурсов</TableCell>\n                            <TableCell align=\"right\">Бонусов зданий</TableCell>\n                            <TableCell align=\"right\">Монет</TableCell>\n                            <TableCell align=\"right\">Всего</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { Object.values(players).map((player) => (\n                            <TableRow key={ player.name }>\n                                <TableCell align=\"center\">{ player.gameEndPosition }</TableCell>\n                                <TableCell component=\"th\" scope=\"player\">\n                                    { player.name }\n                                    <br />\n                                    { player.fraction }\n                                    <br />\n                                    { player.mat }\n                                </TableCell>\n                                <TableCell align=\"right\">{ player.popularity }</TableCell>\n                                <TableCell align=\"right\">{ player.stars }</TableCell>\n                                <TableCell align=\"right\">{ player.territories }</TableCell>\n                                <TableCell align=\"right\">{ player.resources }</TableCell>\n                                <TableCell align=\"right\">{ player.buildingBonuses }</TableCell>\n                                <TableCell align=\"right\">{ player.gold }</TableCell>\n                                <TableCell align=\"right\">{ player.points }</TableCell>\n                            </TableRow>\n                        )) }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <br />\n            <Button\n                variant=\"contained\" color=\"secondary\"\n                onClick={ () => {\n                    // TODO добавить сохранение места\n                    const sortedPlayers = [...Object.values(players)].sort((a, b) => b.points - a.points);\n                    sortedPlayers.forEach((player, index) => editPlayer({ ...player, gameEndPosition: index + 1 }));\n\n                    clearData();\n                    setTimeout(() => {history.push('/');}, 100);\n                } }\n            >\n                Новая игра\n            </Button>\n        </Main>\n    );\n};\n\nexport default Result;\n","import keyBy from 'lodash-es/keyBy';\r\n\r\nexport const TOTAL_PLAYERS = 5;\r\n\r\nexport const fractions = [\r\n    {\r\n        name: 'Республика Поляния',\r\n        slug: 'polania',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/polania.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/polania.png`,\r\n    },\r\n    {\r\n        name: 'Саксонская империя',\r\n        slug: 'saxony',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/saxony.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/saxony.png`,\r\n    },\r\n    {\r\n        name: 'Крымское ханство',\r\n        slug: 'crimean',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/crimean.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/crimean.png`,\r\n    },\r\n    {\r\n        name: 'Северное королевство',\r\n        slug: 'nordic',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/nordic.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/nordic.png`,\r\n    },\r\n    {\r\n        name: 'Руссветский союз',\r\n        slug: 'rusvet',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/rusvet.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/rusvet.png`,\r\n    },\r\n];\r\n\r\nexport const mats = [\r\n    'Промышленный (1)',\r\n    'Строительный (2)',\r\n    'Патриотический (3)',\r\n    'Технический (4)',\r\n    'Фермерский (5)',\r\n];\r\n\r\nexport const structureBonus = [\r\n    'Количество территорий с туннелями',\r\n    'Количество озёр',\r\n    'Количество территорий с символами приключений',\r\n    'Количество территорий с туннелями и вашими зданиями',\r\n    'Количество ваших зданий построенных в один ряд',\r\n    'Количество тундр и ферм с вашими зданиями',\r\n];\r\n\r\nexport const calculatePoints = (points: IPoints): number => {\r\n    let result = 0;\r\n\r\n    if (points.popularity >= 0 && points.popularity <= 6) {\r\n        result = (points.stars * 3) + (points.territories * 2) + Math.floor(points.resources / 2) + points.buildingBonuses + points.gold;\r\n    } else if (points.popularity >= 7 && points.popularity <= 12) {\r\n        result = (points.stars * 4) + (points.territories * 3) + Math.floor(points.resources / 2) * 2 + points.buildingBonuses + points.gold;\r\n    } else if (points.popularity >= 13 && points.popularity <= 18) {\r\n        result = (points.stars * 5) + (points.territories * 4) + Math.floor(points.resources / 2) * 3 + points.buildingBonuses + points.gold;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const foundEngNameFractionToUrl = (fraction: string): string => {\r\n    const dictionaryByFractionNames = keyBy(fractions, 'name');\r\n    return dictionaryByFractionNames[fraction].slug;\r\n};\r\n\r\nexport interface IPlayer extends IPoints {\r\n    id: string;\r\n    name: string;\r\n    fraction: string;\r\n    mat: string;\r\n    points: number;\r\n    gameEndPosition?: number;\r\n}\r\n\r\nexport interface IPoints {\r\n    gold: number;\r\n    popularity: number;\r\n    stars: number;\r\n    territories: number;\r\n    resources: number;\r\n    buildingBonuses: number;\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport StarIcon from '@material-ui/icons/Star';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { calculatePoints, IPlayer, IPoints } from '../ScytheLogic';\n\nconst text = {\n    min:  `Значение не может быть отрицательным`,\n    max:  (max: number) => `Значение не может быть больше ${max}`\n}\n\nconst schema = yup.object().shape({\n    gold: yup.number().required().min(0, text.min).integer().typeError('Введите накопленные монеты'),\n    popularity: yup.number().required().min(0, text.min).max(18, text.max(18)).integer().typeError('Введите накопленную популярность'),\n    stars: yup.number().required().min(0, text.min).max(6, text.max(6)).integer().typeError('Введите накопленные звезды'),\n    territories: yup.number().required().min(0, text.min).integer().typeError('Введите кол-во контролируемых территорий'),\n    resources: yup.number().required().min(0, text.min).integer().typeError('Введите кол-во контролируемых ресурсов'),\n    buildingBonuses: yup.number().required().min(0, text.min).max(9, text.max(9)).integer().typeError('Введите кол-во монет за бонус зданий'),\n});\n\ntype Props = {\n    player: IPlayer;\n    editPlayer(formValue: any): void;\n}\n\nconst ScoreForm: FunctionComponent<Props> = (props) => {\n    const { player, editPlayer } = props;\n\n    const { register, handleSubmit, errors, reset } = useForm<IPoints>({\n        defaultValues: {\n            gold: player?.gold,\n            popularity: player?.popularity,\n            stars: player?.stars,\n            territories: player?.territories,\n            resources: player?.resources,\n            buildingBonuses: player?.buildingBonuses,\n        },\n        mode: 'onBlur',\n        resolver: yupResolver(schema),\n    });\n\n    useEffect(() => {\n        reset(player);\n    }, [reset, player]);\n\n    const onSubmit = (data: IPoints) => {\n        const result = calculatePoints(data);\n        editPlayer({\n            ...player,\n            ...data,\n            points: result,\n        });\n    };\n\n    const handleOnFocus = (event: React.FocusEvent<any>): void => {\n        event.target.select();\n    };\n\n    return (\n        <form onSubmit={ handleSubmit(onSubmit) } autoComplete=\"off\">\n            <Grid container direction={ 'column' } spacing={ 2 }>\n                <Grid item>\n                    <TextField\n                        error={ !!errors.gold }\n                        helperText={ (errors?.gold as any)?.message }\n                        inputRef={ register }\n                        id=\"gold\"\n                        name=\"gold\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Монеты на руках\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <MonetizationOnIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.popularity }\n                        helperText={ (errors?.popularity as any)?.message }\n                        inputRef={ register }\n                        id=\"popularity\"\n                        name=\"popularity\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Популярность\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <FavoriteIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.stars }\n                        helperText={ (errors?.stars as any)?.message }\n                        inputRef={ register }\n                        id=\"stars\"\n                        name=\"stars\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Кол-во звезд\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <StarIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.territories }\n                        helperText={ (errors?.territories as any)?.message }\n                        inputRef={ register }\n                        id=\"territories\"\n                        name=\"territories\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Территорий (фабрика дает +3)\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <TerrainIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.resources }\n                        helperText={ (errors?.resources as any)?.message }\n                        inputRef={ register }\n                        id=\"resources\"\n                        name=\"resources\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Всего ресурсов\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <DonutLargeIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.buildingBonuses }\n                        helperText={ (errors?.buildingBonuses as any)?.message }\n                        inputRef={ register }\n                        id=\"buildingBonuses\"\n                        name=\"buildingBonuses\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Бонусы зданий\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <HomeIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <Grid container alignItems={ 'center' } justify={ 'space-between' } spacing={ 2 }>\n                        <Grid item>\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\">Подсчитать</Button>\n                        </Grid>\n\n                        <Grid item>\n                            <Typography variant={ 'h6' }>Очков: { player.points }</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </form>\n\n    );\n};\n\nexport default ScoreForm;\n","import { Button, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport React, { FunctionComponent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ScoreForm from '../components/ScoreForm';\r\nimport AppContext, { SpecType } from '../context/AppContext';\r\nimport Main from '../layouts/Main';\r\nimport { routes } from '../routes';\r\nimport { foundEngNameFractionToUrl, IPlayer } from '../ScytheLogic';\r\n\r\nfunction foundPlayer(players: SpecType, searchWord: string): IPlayer {\r\n    const array: IPlayer[] = Object.values(players);\r\n    return array.find(item => foundEngNameFractionToUrl(item.fraction) === searchWord) as IPlayer\r\n}\r\n\r\nconst Score: FunctionComponent = (props: any) => {\r\n    const { players, fetchPlayers, editPlayer } = React.useContext(AppContext);\r\n\r\n    const fraction = props.match.params.id;\r\n    const player = foundPlayer(players, fraction)\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n    }, []);\r\n\r\n    let prevPlayer = null;\r\n    let nextPlayer = null;\r\n    if (Object.values(players).length > 0) {\r\n        const sorted = Object.values(players).sort((a, b) =>\r\n            parseInt(a.mat.slice(-2, -1)) - parseInt(b.mat.slice(-2, -1)));\r\n\r\n        const currentIndex = sorted.findIndex(item => item.id === player.id);\r\n\r\n        prevPlayer = currentIndex >= 0 && Object.values(sorted)[currentIndex - 1] ? foundEngNameFractionToUrl(Object.values(sorted)[currentIndex - 1].fraction) : null;\r\n        nextPlayer = currentIndex >= 0 && Object.values(sorted)[currentIndex + 1] ? foundEngNameFractionToUrl(Object.values(sorted)[currentIndex + 1].fraction) : null;\r\n    }\r\n\r\n    if (!player) return <div>Loading</div>;\r\n\r\n    return (\r\n        <Main title={ 'Подсчет очков' }>\r\n            <Grid container direction={ 'column' } spacing={ 2 }>\r\n                <Grid item>\r\n                    <Grid container alignItems={ 'center' }>\r\n                        <Grid item xs={ 8 } sm={ 10 }>\r\n                            <Typography variant={ 'h5' }>Игрок: { player.name }</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 2 } sm={ 1 } style={ { textAlign: 'end' } }>\r\n                            <IconButton\r\n                                disabled={ !Boolean(prevPlayer) }\r\n                                component={ Link }\r\n                                to={ `/score/${ prevPlayer }` }\r\n                                color=\"inherit\"\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 2 } sm={ 1 } style={ { textAlign: 'end' } }>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                disabled={ !Boolean(nextPlayer) }\r\n                                component={ Link }\r\n                                to={ `/score/${ nextPlayer }` }\r\n                                color=\"inherit\"\r\n                            >\r\n                                <ChevronRightIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ScoreForm player={ player } editPlayer={ editPlayer } />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Grid container alignItems={ 'center' } justify={ 'space-between' } spacing={ 2 }>\r\n                        <Grid item>\r\n                            <Button component={ Link } to={ routes.result.path } type=\"submit\" color=\"secondary\" variant=\"contained\">Результаты</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default Score;\r\n","import { IPlayer } from '../ScytheLogic';\n\nexport enum Types {\n    'FETCH_PLAYER',\n    'CREATE_PLAYER',\n    'EDIT_PLAYER',\n    'FETCH_PLAYERS',\n    'DELETE_PLAYER',\n    'CLEAR_PLAYERS_DATA',\n}\n\ntype ActionFetchPlayerType = {\n    type: Types.FETCH_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionFetchPlayersType = {\n    type: Types.FETCH_PLAYERS;\n    payload: IPlayer[];\n}\n\ntype ActionCreatePlayerType = {\n    type: Types.CREATE_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionEditPlayerType = {\n    type: Types.EDIT_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionDeletePlayerType = {\n    type: Types.DELETE_PLAYER;\n    payload: string;\n}\n\ntype ActionClearPlayerType = {\n    type: Types.CLEAR_PLAYERS_DATA;\n}\n\nexport type Action = ActionFetchPlayerType\n    | ActionFetchPlayersType\n    | ActionCreatePlayerType\n    | ActionEditPlayerType\n    | ActionDeletePlayerType\n    | ActionClearPlayerType;\n","import { CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n    media: {\n        objectPosition: '50% 25%',\n    },\n});\n\ntype Props = {\n    name?: string,\n    characterPath?: string\n};\n\nconst FractionCharacterImage: React.FC<Props> = (props) => {\n    const { name = '', characterPath = '' } = props;\n    const classes = useStyles();\n\n    return (\n        <CardMedia\n            component=\"img\"\n            height=\"140\"\n            className={ classes.media }\n            image={ characterPath }\n            alt={ name }\n            title={ name }\n        />\n    );\n};\n\nexport default FractionCharacterImage;\n","import React from 'react';\n\nconst FractionIcon: React.FC<{ name: string, iconPath: string }> = (props) => {\n    const { name, iconPath } = props;\n    return (\n        <img height={ 35 } src={ iconPath } alt={ name } />\n    );\n};\n\nexport default FractionIcon;\n","import { Card, CardActions, CardContent, MenuItem } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from '../context/AppContext';\r\nimport { foundEngNameFractionToUrl, fractions, IPlayer, mats } from '../ScytheLogic';\r\nimport FractionCharacterImage from './FractionCharacterImage';\r\nimport FractionIcon from './FractionIcon';\r\n\r\nconst PlayerCard: FunctionComponent<IPlayer | any> = (props) => {\r\n    const {\r\n        name, fraction, mat, id,\r\n    } = props;\r\n\r\n    const {\r\n        players,\r\n        editPlayer,\r\n        deletePlayer,\r\n    } = React.useContext(AppContext);\r\n\r\n    const handleChangeName = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], name: event.target.value };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleChangeFraction = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        const newFraction = event.target.value;\r\n        // @ts-ignore\r\n        const prevFraction = players[id].fraction;\r\n        const isNewFractionSelect = Object.values(players).find(player => player.fraction === newFraction);\r\n\r\n        // Если мы выбрали уже задействованную фракцию, поменяем значения местами\r\n        if (isNewFractionSelect) {\r\n            // @ts-ignore\r\n            const changesPlayers = { ...players[isNewFractionSelect.id], fraction: prevFraction };\r\n            editPlayer(changesPlayers);\r\n        }\r\n\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], fraction: newFraction };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleChangeMat = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        const newMat = event.target.value;\r\n        // @ts-ignore\r\n        const prevMat = players[id].mat;\r\n        const isNewMatSelect = Object.values(players).find(player => player.mat === newMat);\r\n\r\n        if (isNewMatSelect) {\r\n            // @ts-ignore\r\n            const changesPlayers = { ...players[isNewMatSelect.id], mat: prevMat };\r\n            editPlayer(changesPlayers);\r\n        }\r\n\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], mat: newMat };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleDeletePlayer = (id: string) => {\r\n        deletePlayer(id);\r\n    };\r\n\r\n    const handleOnFocus = (event: React.FocusEvent<any>): void => {\r\n        event.target.select();\r\n    };\r\n\r\n    const onSubmit = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <FractionCharacterImage { ...fractions.find(i => i.name === fraction) } />\r\n            <CardContent>\r\n                <form onSubmit={ onSubmit }>\r\n                    <Grid container spacing={ 2 } direction={ 'column' }>\r\n                        <Grid item xs={ 12 }>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                defaultValue={ name }\r\n                                onChange={ (event) => handleChangeName(event, id) }\r\n                                onFocus={ handleOnFocus }\r\n                                variant=\"outlined\"\r\n                                size=\"medium\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={ 12 }>\r\n                            <Grid container justify={ 'space-between' }>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        select\r\n                                        SelectProps={ {\r\n                                            renderValue: (value: any) => {\r\n                                                const fraction = fractions.find(i => i.name === value);\r\n                                                return (\r\n                                                    <div\r\n                                                        style={ {\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                        } }\r\n                                                    >\r\n                                                        { fraction && <FractionIcon { ...fraction } /> }\r\n                                                    </div>);\r\n                                            },\r\n                                        } }\r\n                                        label=\"Фракция\"\r\n                                        value={ fraction }\r\n                                        onChange={ (event) => handleChangeFraction(event, id) }\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                    >\r\n                                        { fractions.map((value) => (\r\n                                            <MenuItem key={ value.name } value={ value.name }>\r\n                                                <FractionIcon { ...value } />&nbsp;&nbsp;&nbsp;{ value.name }\r\n                                            </MenuItem>\r\n                                        )) }\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item className=\"mats-input\">\r\n                                    <TextField\r\n                                        select\r\n                                        label=\"Планшет\"\r\n                                        value={ mat }\r\n                                        onChange={ (event) => handleChangeMat(event, id) }\r\n                                        variant=\"outlined\"\r\n                                        size=\"medium\"\r\n                                        fullWidth\r\n                                    >\r\n                                        { mats.map((value) => (\r\n                                            <MenuItem key={ value } value={ value }>\r\n                                                { value }\r\n                                            </MenuItem>\r\n                                        )) }\r\n                                    </TextField>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </CardContent>\r\n\r\n            <CardActions disableSpacing style={ { paddingTop: 0, display: 'flex', justifyContent: 'flex-end' } }>\r\n                <Button\r\n                    style={ { marginRight: 'auto' } }\r\n                    component={ Link } to={ `/score/${ foundEngNameFractionToUrl(fraction) }` }\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                >\r\n                    Подсчитать очки\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"secondary\"\r\n                    size=\"medium\"\r\n                    onClick={ () => handleDeletePlayer(id) }\r\n                >\r\n                    Удалить\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default PlayerCard;\r\n","import Result from './pages/Result';\nimport Score from './pages/Score';\nimport Start from './pages/Start';\n\nexport const routes = {\n    'index': {\n        path: '/',\n        title: 'Кто играет?',\n        exact: true,\n        component: Start,\n    },\n    'score': {\n        path: '/score/:id',\n        title: 'Подсчет очков',\n        exact: true,\n        component: Score,\n    },\n    'result': {\n        path: '/result',\n        title: 'Итоги по окончанию игры',\n        exact: true,\n        component: Result,\n    }\n};\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PlayerCard from '../components/PlayerCard';\nimport AppContext from '../context/AppContext';\nimport Main from '../layouts/Main';\nimport { foundEngNameFractionToUrl, mats } from '../ScytheLogic';\n\nconst Start: FunctionComponent = () => {\n    const {\n        players,\n        createPlayer,\n        fetchPlayers,\n    } = React.useContext(AppContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchPlayers();\n    }, []);\n\n    const handleAddPlayer = () => {\n        createPlayer();\n    };\n\n    const handleCalculateScore = (): void => {\n        for (const mat of mats) {\n            const playerFirstTurn = Object.values(players).find(player => player.mat === mat);\n            if (playerFirstTurn) {\n                history.push(`/score/${ foundEngNameFractionToUrl(playerFirstTurn.fraction) }`);\n                break;\n            }\n        }\n    };\n\n    return (\n        <Main>\n            <Grid container direction=\"column\" spacing={ 4 }>\n                <Grid item>\n                    <Grid container direction=\"column\" spacing={ 1 }>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\" color=\"primary\" fullWidth\n                                onClick={ handleAddPlayer }\n                            >\n                                Добавить игрока\n                            </Button>\n                        </Grid>\n\n                        <Grid item>\n                            <Button\n                                variant=\"contained\" color=\"secondary\" fullWidth\n                                onClick={ handleCalculateScore }\n                            >\n                                Подсчет очков\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item>\n                    <Grid container direction=\"column\" spacing={ 2 }>\n                        { Object.values(players).map((player) =>\n                            <Grid key={ player.id } item><PlayerCard { ...player } /></Grid>) }\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Main>\n    );\n};\n\nexport default Start;\n\n","import { IconButton, Typography } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport React, { FunctionComponent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        toolbar: {\n            justifyContent: 'space-between',\n        },\n        title: {\n            marginLeft: 'auto',\n        },\n    }),\n);\n\ntype Props = {\n    title?: string;\n}\n\nconst AppHeader: FunctionComponent<Props> = (props) => {\n    const { title = 'Scythe Point Calculator' } = props;\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar className={ classes.toolbar }>\n                { history.location.pathname !== routes.index.path &&\n                <IconButton\n                    component={ Link }\n                    to={ routes.index.path }\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"back\"\n                >\n                    <ArrowBackIosIcon />\n                </IconButton>\n                }\n\n                <Typography variant=\"h6\" className={ classes.title }>\n                    { title }\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default AppHeader;\n\n\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default () => (\n    <ToastContainer\n        position=\"bottom-right\"\n        autoClose={ 5000 }\n        hideProgressBar={ false }\n        newestOnTop\n        closeOnClick\n        rtl={ false }\n        pauseOnFocusLoss={ false }\n        draggable\n        pauseOnHover\n    />\n)\n","import Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { FunctionComponent } from 'react';\r\nimport AppHeader from '../components/AppHeader';\r\nimport ToastMessage from '../components/ToastMessage';\r\n\r\nconst useStyles = makeStyles({\r\n    fixed: {\r\n        '@media (min-width: 600px)': {\r\n            maxWidth: 768,\r\n        },\r\n        '@media (min-width: 960px)': {\r\n            maxWidth: 960\r\n        },\r\n        '@media (min-width: 1280px)': {\r\n            maxWidth: 1280\r\n        }\r\n    },\r\n});\r\n\r\ntype Props = {\r\n    title?: string;\r\n};\r\n\r\nconst Main: FunctionComponent<Props> = (props) => {\r\n    const { title } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n\r\n            <AppHeader title={ title } />\r\n\r\n            <ToastMessage />\r\n\r\n            <Container fixed  className={ classes.fixed }>\r\n                <main style={ { height: '90vh', paddingTop: 30 } }>\r\n                    { props.children }\r\n                </main>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Main from '../layouts/Main';\nimport { routes } from '../routes';\n\nconst NotFound: FunctionComponent = () => {\n    return (\n        <Main>\n            <Typography variant={ 'h1' } align={ 'center' }>404?!</Typography>\n            <Button component={ Link } to={ routes.index.path } variant=\"outlined\" color=\"primary\" fullWidth>\n                Вернуться на главную\n            </Button>\n        </Main>\n    );\n};\n\nexport default NotFound;\n","import React, { FC } from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport NotFound from './pages/NotFound';\nimport { routes } from './routes';\n\nconst App: FC = () => (\n    <HashRouter basename=\"/\">\n        <Switch>\n            { Object.values(routes).map(route => <Route key={ route.path } { ...route } />) }\n            <Route component={ NotFound } />\n        </Switch>\n    </HashRouter>\n);\n\nexport default App;\n","import mapKeys from 'lodash-es/mapKeys';\nimport omit from 'lodash-es/omit';\nimport { Action, Types } from './Types';\n\nexport default function appReducer(state: Object = {}, action: Action) {\n    switch (action.type) {\n        case Types.FETCH_PLAYERS:\n            return { ...state, ...mapKeys(action.payload, 'id') };\n        case Types.FETCH_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.CREATE_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.EDIT_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.DELETE_PLAYER:\n            return omit(state, action.payload);\n        case Types.CLEAR_PLAYERS_DATA:\n            return {};\n        default:\n            return state;\n    }\n}\n","import { useLocalStorage, writeStorage } from '@rehooks/local-storage';\r\nimport { nanoid } from 'nanoid';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { fractions, mats, TOTAL_PLAYERS } from '../ScytheLogic';\r\nimport AppContext, { SpecType } from './AppContext';\r\nimport appReducer from './appReducer';\r\nimport { Action, Types } from './Types';\r\n\r\nfunction shuffle(array: any): Array<any> {\r\n    const result = [...array];\r\n    for (let i = result.length - 1; i > 0; i--) {\r\n        let randIndex = Math.floor(Math.random() * (i + 1));\r\n        let temp = result[i];\r\n        result[i] = result[randIndex];\r\n        result[randIndex] = temp;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst AppProvider: React.FC = props => {\r\n    const { children } = props;\r\n\r\n    // @ts-ignore\r\n    const [players, dispatch]: [players: SpecType, dispatch: React.Dispatch<Action>] = useReducer(appReducer, {});\r\n\r\n    // LOAD FROM LocalStorage\r\n    const [storagePlayers] = useLocalStorage<any>('players');\r\n\r\n    // SAVE TO LocalStorage\r\n    useEffect(() => { writeStorage('players', players); }, [players]);\r\n\r\n    function fetchPlayer(id: string): void {\r\n        if (storagePlayers) {\r\n            dispatch({ type: Types.FETCH_PLAYER, payload: storagePlayers[id] });\r\n        }\r\n    }\r\n\r\n    function fetchPlayers(): void {\r\n        if (storagePlayers) {\r\n            dispatch({ type: Types.FETCH_PLAYERS, payload: storagePlayers });\r\n        }\r\n    }\r\n\r\n    function createPlayer(): void {\r\n        if (Object.values(players).length >= TOTAL_PLAYERS) {\r\n            toast.error('🔥 Максимальное количество игроков: 5', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            return;\r\n        } else {\r\n            toast.success('✔ Добавлен игрок', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n        // 1. Получить уже используемые фракции и планшеты\r\n        const usedFraction = Object.values(players).map(i => i.fraction);\r\n        const usedMats = Object.values(players).map(i => i.mat);\r\n\r\n        // 2. Рандомно выберем фракции и планшеты, уберем уже используемые\r\n        const randomFractions = shuffle(fractions.map(i => i.name)).filter(i => !usedFraction.includes(i));\r\n        const randomMats = shuffle(mats).filter(i => !usedMats.includes(i));\r\n\r\n        // 3. Готово!\r\n        const fraction = randomFractions[0];\r\n        const mat = randomMats[0];\r\n\r\n        const player = {\r\n            id: nanoid(),\r\n            name: 'Player ' + (Object.values(players).length + 1),\r\n            fraction,\r\n            mat,\r\n            gold: 0,\r\n            popularity: 0,\r\n            stars: 0,\r\n            territories: 0,\r\n            resources: 0,\r\n            buildingBonuses: 0,\r\n            points: 0,\r\n        };\r\n\r\n        dispatch({ type: Types.CREATE_PLAYER, payload: player });\r\n    }\r\n\r\n    function editPlayer(formValues: any): void {\r\n        dispatch({ type: Types.EDIT_PLAYER, payload: formValues });\r\n    }\r\n\r\n    function deletePlayer(id: string): void {\r\n        dispatch({ type: Types.DELETE_PLAYER, payload: id });\r\n    }\r\n\r\n    function clearData(): void {\r\n        Object.values(players).forEach(player => deletePlayer(player.id));\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={ {\r\n                players,\r\n                dispatch,\r\n                fetchPlayer,\r\n                fetchPlayers,\r\n                createPlayer,\r\n                editPlayer,\r\n                deletePlayer,\r\n                clearData,\r\n            } }\r\n        >\r\n            { children }\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport AppProvider from './context/AppProvider';\n\nReactDOM.render(\n    <AppProvider>\n        <App />\n    </AppProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}