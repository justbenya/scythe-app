{"version":3,"sources":["history.ts","context/AppContext.ts","pages/Result.tsx","assets/icons/wreath.svg","pages/ResultShort.tsx","ScytheLogic.ts","components/ScoreForm.tsx","pages/Score.tsx","context/Types.ts","components/FractionCharacterImage.tsx","components/FractionIcon.tsx","components/PlayerCard.tsx","routes.ts","pages/Start.tsx","components/AppHeader.tsx","pages/ToastMessage.tsx","layouts/Main.tsx","pages/NotFound.tsx","App.tsx","context/appReducer.ts","context/AppProvider.tsx","index.tsx"],"names":["createHistory","AppContext","createContext","players","dispatch","fetchPlayer","fetchPlayers","createPlayer","editPlayer","deletePlayer","clearData","useStyles","makeStyles","table","minWidth","Result","history","useHistory","classes","React","useContext","useEffect","result","Object","values","sort","a","b","points","map","player","index","gameEndPosition","mapKeys","title","TableContainer","component","Paper","Table","className","size","TableHead","TableRow","TableCell","align","TableBody","scope","name","fraction","mat","popularity","stars","territories","resources","buildingBonuses","gold","Button","variant","color","onClick","forEach","setTimeout","push","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgWreath","_ref","svgRef","titleId","props","viewBox","xmlns","ref","id","ForwardRef","root","position","overflow","border","height","textTransform","background","WebkitBackgroundClip","WebkitTextFillColor","wreath","fill","silver","bronze","ResultShort","Grid","container","item","xs","justify","alignItems","spacing","width","Typography","sm","md","Card","CardMedia","style","image","process","children","CardContent","display","justifyContent","top","left","transform","borderRadius","marginTop","fontWeight","textShadow","bottom","fontSize","padding","fractions","slug","characterPath","iconPath","mats","foundEngNameFractionToUrl","keyBy","schema","yup","shape","required","min","integer","max","ScoreForm","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","reset","handleOnFocus","event","select","onSubmit","data","Math","floor","calculatePoints","autoComplete","direction","TextField","error","helperText","message","inputRef","fullWidth","label","type","onFocus","InputProps","startAdornment","InputAdornment","Types","Score","searchWord","find","foundPlayer","match","params","prevPlayer","nextPlayer","sorted","parseInt","slice","currentIndex","findIndex","textAlign","IconButton","disabled","Boolean","Link","to","edge","routes","path","media","objectPosition","FractionCharacterImage","alt","FractionIcon","src","PlayerCard","preventDefault","defaultValue","onChange","changesPlayers","value","handleChangeName","SelectProps","renderValue","newFraction","prevFraction","isNewFractionSelect","handleChangeFraction","MenuItem","newMat","prevMat","isNewMatSelect","handleChangeMat","CardActions","disableSpacing","paddingTop","marginRight","handleDeletePlayer","exact","playerFirstTurn","theme","createStyles","toolbar","marginLeft","AppHeader","AppBar","Toolbar","location","pathname","aria-label","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","fixed","maxWidth","Main","CssBaseline","ToastMessage","Container","NotFound","App","route","appReducer","state","action","FETCH_PLAYERS","payload","FETCH_PLAYER","CREATE_PLAYER","EDIT_PLAYER","DELETE_PLAYER","omit","CLEAR_PLAYERS_DATA","shuffle","array","randIndex","random","temp","AppProvider","useReducer","useLocalStorage","storagePlayers","writeStorage","Provider","toast","progress","undefined","success","usedFraction","usedMats","randomFractions","filter","includes","randomMats","nanoid","formValues","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e738640f.chunk.js","sourcesContent":["import { createBrowserHistory as createHistory } from 'history'\n\nexport default createHistory();\n","import React, { createContext } from 'react';\nimport { IPlayer } from '../ScytheLogic';\nimport { Action} from './Types';\n\nexport type SpecType = {\n    [id: string]: IPlayer\n}\n\ntype AppContextType = {\n    players: SpecType;\n    dispatch: React.Dispatch<Action>;\n    fetchPlayer(id: string): void;\n    fetchPlayers(): void;\n    createPlayer(): void;\n    editPlayer(formValues: any): void;\n    deletePlayer(id: string): void;\n    clearData(): void;\n}\n\nconst AppContext = createContext<AppContextType>({\n    players: {},\n    dispatch: () => null,\n    fetchPlayer: () => {},\n    fetchPlayers: () => {},\n    createPlayer: () => {},\n    editPlayer: () => {},\n    deletePlayer: () => {},\n    clearData: () => {},\n});\n\nexport default AppContext;\n","import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport mapKeys from 'lodash-es/mapKeys';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\nimport Main from '../layouts/Main';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 320,\n    },\n});\n\nconst Result: FunctionComponent = () => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    let {\n        players,\n        fetchPlayers,\n        clearData,\n        editPlayer,\n    } = React.useContext(AppContext);\n\n    useEffect(() => {\n        fetchPlayers();\n    }, []);\n\n    const sortedPlayers = [...Object.values(players)].sort((a, b) => b.points - a.points);\n    const result = sortedPlayers.map((player, index) => ({ ...player, gameEndPosition: index + 1 }));\n\n    players = { ...mapKeys(result, 'id') };\n\n    return (\n        <Main title={ 'Итоги по окончанию игры' }>\n            <TableContainer component={ Paper }>\n                <Table className={ classes.table } size=\"medium\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Место</TableCell>\n                            <TableCell>Фракция</TableCell>\n                            <TableCell align=\"right\">Популярность</TableCell>\n                            <TableCell align=\"right\">Звезд</TableCell>\n                            <TableCell align=\"right\">Территорий</TableCell>\n                            <TableCell align=\"right\">Ресурсов</TableCell>\n                            <TableCell align=\"right\">Бонусов зданий</TableCell>\n                            <TableCell align=\"right\">Монет</TableCell>\n                            <TableCell align=\"right\">Всего</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { Object.values(players).map((player) => (\n                            <TableRow key={ player.name }>\n                                <TableCell align=\"center\">{ player.gameEndPosition }</TableCell>\n                                <TableCell component=\"th\" scope=\"player\">\n                                    { player.name }\n                                    <br />\n                                    { player.fraction }\n                                    <br />\n                                    { player.mat }\n                                </TableCell>\n                                <TableCell align=\"right\">{ player.popularity }</TableCell>\n                                <TableCell align=\"right\">{ player.stars }</TableCell>\n                                <TableCell align=\"right\">{ player.territories }</TableCell>\n                                <TableCell align=\"right\">{ player.resources }</TableCell>\n                                <TableCell align=\"right\">{ player.buildingBonuses }</TableCell>\n                                <TableCell align=\"right\">{ player.gold }</TableCell>\n                                <TableCell align=\"right\">{ player.points }</TableCell>\n                            </TableRow>\n                        )) }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <br />\n            <Button\n                variant=\"contained\" color=\"secondary\"\n                onClick={ () => {\n                    // TODO добавить сохранение места\n                    const sortedPlayers = [...Object.values(players)].sort((a, b) => b.points - a.points);\n                    sortedPlayers.forEach((player, index) => editPlayer({ ...player, gameEndPosition: index + 1 }));\n\n                    clearData();\n                    setTimeout(() => {history.push('/');}, 100);\n                } }\n            >\n                Новая игра\n            </Button>\n        </Main>\n    );\n};\n\nexport default Result;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m504.792969 132.21875-6.59375-14.191406-14.492188 6.597656c-16.117187 7.820312-28.667969 21.179688-36.855469 37.199219-8.480468-19.476563-19.234374-38.035157-30.910156-55.113281 25.222656-27.183594 25.136719-68.457032.605469-95.117188l-10.191406-11.09375-11.09375 10.492188c-12.085938 11.460937-19.675781 25.742187-23.058594 40.792968-21.105469-23.082031-38.070313-37.859375-39.9375-39.457031l-19.5 22.75c.425781.375 16.375 14.238281 36.542969 36.226563-15.546875 1.9375-30.476563 8.933593-42.792969 20.339843l-10.492187 10.195313 9.894531 10.792968c12.292969 13.492188 29.980469 20.386719 48.867187 20.386719 16.164063 0 28.3125-4.472656 36.835938-8.757812 9.285156 13.578125 17.84375 28.0625 24.917968 43.078125-13.777343-1.570313-27.867187.839844-41.367187 7.054687l-14.390625 6.59375 7.195312 14.09375c12.472657 22.945313 39.722657 33.6875 66.144532 35.25.046875.828125.238281 1.65625.269531 2.484375.648437 16.863282-2.589844 32.238282-9.117187 46.578125-7.179688-14.863281-20.453126-26.515625-40.203126-34.246093l-11.992187-4.792969-6.597656 10.792969c-8.183594 14.183593.617187 51.121093 19.519531 76.757812-13.6875 12.167969-25.972656 21.007812-37.527344 28.300781 2.554688-16.570312-.761718-33.882812-10.175781-48.996093l-7.496094-12.289063-12.589843 7.195313c-25.183594 14.292968-39.59375 53.171874-29.0625 86.800781-10.699219 6.289062-21.597657 13.859375-33.148438 24.03125-11.609375-10.226563-22.558594-17.8125-33.308594-24.121094 10.597656-35.414063-4.480468-72.847656-28.90625-86.710937l-12.59375-7.199219-7.492187 12.292969c-9.414063 15.113281-12.734375 32.421874-10.175781 48.992187-11.554688-7.292969-23.84375-16.128906-37.527344-28.296875 18.898437-25.640625 27.703125-62.578125 19.519531-76.761719l-6.597656-10.792969-11.992188 4.796876c-21.667969 8.480468-34.265625 21.5625-40.203125 34.242187-6.527344-14.339844-9.765625-29.710937-9.117187-46.578125.03125-.824219.222656-1.652344.269531-2.472656 26.722656-1.566406 53.785156-12.523438 66.140625-35.257813l7.195313-14.09375-14.390626-6.59375c-13.742187-6.328125-27.9375-8.890625-41.132812-7.566406 7.03125-14.835937 15.507812-29.144531 24.6875-42.566406 8.519531 4.285156 20.671875 8.757812 36.832031 8.757812 18.890625 0 36.578125-6.894531 48.871094-20.390625l9.894531-10.792968-10.492187-10.195313c-11.945313-11.058594-26.726563-18.195313-43.027344-20.082031 20.28125-22.144532 36.347656-36.105469 36.777344-36.480469l-19.5-22.75c-1.871094 1.59375-18.832031 16.371094-39.9375 39.457031-3.386719-15.054687-10.972657-29.332031-23.058594-40.792968l-11.09375-10.492188-10.195313 11.089844c-24.386718 26.507812-24.738281 67.824218.609376 95.117187-11.675782 17.078125-22.429688 35.640625-30.910157 55.117188-8.1875-16.023438-21.738281-29.382813-37.855469-37.199219l-13.492187-6.597656-6.59375 13.191406c-18.761719 37.519531.617187 84.734375 40.882813 96.15625-.097657 1.4375-.390626 2.859375-.449219 4.296875-.753907 19.765625 2.496093 38.335937 9.570312 55.625-13.867187-2.179687-28.851562-1.921875-42.210937 3.421875l-14.691406 5.996094 6.894531 14.390625c21.304687 47.089843 66.558593 55.757812 96.804687 37.3125 16.1875 14.703125 30.367188 25.160156 43.285156 33.3125-12.734374 6.84375-24.105468 16.757812-32.355468 30.113281l-8.09375 13.492188 13.792968 7.496093c31.9375 17.652344 66.535157 8.90625 88.101563-17.359375 8.390625 5.070313 16.902344 11.148438 25.773437 18.777344-13.417968 14.980469-28.011718 36.152344-44.507812 61.652344l25.179688 16.28125c15.191406-23.488282 28.53125-43 40.820312-56.746094 12.289062 13.746094 25.628906 33.257812 40.816406 56.746094l25.179688-16.28125c-16.492188-25.5-31.085938-46.667969-44.507813-61.648438 8.933594-7.679687 17.5-13.792968 25.941407-18.886718 21.773437 27.023437 56.890624 34.625 87.9375 17.464843l13.792968-7.496093-8.09375-13.492188c-8.25-13.355469-19.617187-23.269531-32.351562-30.113281 12.914062-8.152344 27.09375-18.609375 43.28125-33.3125 30.246094 18.445312 75.5 10.777343 96.804687-36.3125l6.894531-14.390625-14.691406-6.996094c-14.226562-5.6875-29.6875-5.550781-42.121094-3.585938 7.023438-17.238281 10.230469-35.757812 9.476563-55.460937-.054687-1.4375-.347656-2.863281-.445313-4.296875 40.261719-11.417969 59.640626-57.636719 40.878907-95.15625zm0 0\"\n});\n\nfunction SvgWreath(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 511.99619 511\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWreath);\nexport default __webpack_public_path__ + \"static/media/wreath.49b89a82.svg\";\nexport { ForwardRef as ReactComponent };","import { Card, CardContent, CardMedia, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { ReactComponent as Wreath } from '../assets/icons/wreath.svg';\nimport AppContext from '../context/AppContext';\nimport Main from '../layouts/Main';\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'relative',\n        overflow: 'unset',\n        border: '7px #DF9F28 solid',\n        height: '380px',\n    },\n\n    gold: {\n        textTransform: 'uppercase',\n        background: '-webkit-linear-gradient(top, #FDE08D, #8f6B29)',\n        WebkitBackgroundClip: 'text',\n        WebkitTextFillColor: 'transparent',\n    },\n    wreath: {\n        fill: '#dbc214',\n    },\n    silver: {\n        fill: '#c0c0c0',\n    },\n    bronze: {\n        fill: '#905a18',\n    },\n});\n\n\nconst ResultShort: FunctionComponent = () => {\n    const { players, fetchPlayers } = React.useContext(AppContext);\n    const classes = useStyles();\n\n    useEffect(() => {\n        fetchPlayers();\n    }, []);\n\n    return (\n        <Main title={ 'Итоги по окончанию игры' }>\n\n            <Grid container>\n                <Grid item xs={ 12 }>\n                    <Grid container justify={ 'center' } alignItems={ 'center' } spacing={ 2 }>\n                        <Grid item><Wreath className={ classes.wreath } height=\"40px\" width=\"40px\" /></Grid>\n                        <Grid item>\n                            <Typography className={ classes.gold } component={ 'h1' } variant={ 'h6' }>Игрок Player 1\n                                побеждает</Typography>\n                        </Grid>\n                        <Grid item><Wreath className={ classes.wreath } height=\"40px\" width=\"40px\" /></Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid container justify={ 'center' } alignItems={ 'center' } spacing={ 6 }>\n                <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\n                    <Card className={ classes.root }>\n                        <CardMedia\n                            component=\"div\"\n                            style={ { height: '100%' } }\n                            image={ `${ process.env.PUBLIC_URL }/assets/fractions/saxony.jpg` }\n                            title=\"Contemplative Reptile\"\n                            children={\n                                <CardContent style={ { display: 'flex', height: '100%', justifyContent: 'center' } }>\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            top: '-20px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '50%',\n                                            background: '#000',\n                                            width: 60,\n                                            height: 60,\n                                        } }\n                                    >\n                                        <Wreath className={ classes.wreath } height=\"40px\" width=\"40px\" />\n                                    </div>\n\n                                    <Typography\n                                        variant={ 'h1' } style={ {\n                                        marginTop: 'auto',\n                                        color: '#fff',\n                                        fontWeight: 'bold',\n                                        textShadow: '2px 2px 2px #000',\n                                    } }\n                                    >92</Typography>\n\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            bottom: '-30px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '40px',\n                                            background: '#000',\n                                            fontSize: '24px',\n                                            color: '#fff',\n                                            padding: '10px 20px',\n                                            minWidth: '90%',\n                                        } }\n                                    >Player 1\n                                    </div>\n                                </CardContent>\n                            }\n                        />\n\n                    </Card>\n                </Grid>\n\n\n                <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\n                    <Card className={ classes.root } style={ { border: 'none' } }>\n                        <CardMedia\n                            component=\"div\"\n                            style={ { height: '100%' } }\n                            image={ `${ process.env.PUBLIC_URL }/assets/fractions/polania.jpg` }\n                            title=\"Contemplative Reptile\"\n                            children={\n                                <CardContent style={ { display: 'flex', height: '100%', justifyContent: 'center' } }>\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            top: '-20px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '50%',\n                                            background: '#000',\n                                            width: 60,\n                                            height: 60,\n                                        } }\n                                    >\n                                        <Wreath className={ classes.silver } height=\"40px\" width=\"40px\" />\n                                    </div>\n                                    <Typography\n                                        variant={ 'h1' } style={ {\n                                        marginTop: 'auto',\n                                        color: '#fff',\n                                        fontWeight: 'bold',\n                                        textShadow: '2px 2px 2px #000',\n                                    } }\n                                    >52</Typography>\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            bottom: '-30px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '40px',\n                                            background: '#000',\n                                            fontSize: '24px',\n                                            color: '#fff',\n                                            padding: '10px 20px',\n                                            minWidth: '90%',\n                                        } }\n                                    >Player 2\n                                    </div>\n                                </CardContent>\n                            }\n                        />\n\n                    </Card>\n                </Grid>\n                <Grid item xs={ 12 } sm={ 6 } md={ 4 }>\n                    <Card className={ classes.root } style={ { border: 'none' } }>\n                        <CardMedia\n                            component=\"div\"\n                            style={ { height: '100%' } }\n                            image={ `${ process.env.PUBLIC_URL }/assets/fractions/rusvet.jpg` }\n                            title=\"Contemplative Reptile\"\n                            children={\n                                <CardContent style={ { display: 'flex', height: '100%', justifyContent: 'center' } }>\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            top: '-20px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '50%',\n                                            background: '#000',\n                                            width: 60,\n                                            height: 60,\n                                        } }\n                                    >\n                                        <Wreath className={ classes.bronze } height=\"40px\" width=\"40px\" />\n                                    </div>\n                                    <Typography\n                                        variant={ 'h1' } style={ {\n                                        marginTop: 'auto',\n                                        color: '#fff',\n                                        fontWeight: 'bold',\n                                        textShadow: '2px 2px 2px #000',\n                                    } }\n                                    >13</Typography>\n                                    <div\n                                        style={ {\n                                            position: 'absolute',\n                                            bottom: '-30px',\n                                            left: '50%',\n                                            transform: 'translate(-50%)',\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderRadius: '40px',\n                                            background: '#000',\n                                            fontSize: '24px',\n                                            color: '#fff',\n                                            padding: '10px 20px',\n                                            minWidth: '90%',\n                                        } }\n                                    >Player 3\n                                    </div>\n                                </CardContent>\n                            }\n                        />\n\n                    </Card>\n                </Grid>\n            </Grid>\n        </Main>\n    );\n};\n\nexport default ResultShort;\n","import keyBy from 'lodash-es/keyBy';\r\n\r\nexport const TOTAL_PLAYERS = 5;\r\n\r\nexport const fractions = [\r\n    {\r\n        name: 'Республика Поляния',\r\n        slug: 'polania',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/polania.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/polania.png`,\r\n    },\r\n    {\r\n        name: 'Саксонская империя',\r\n        slug: 'saxony',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/saxony.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/saxony.png`,\r\n    },\r\n    {\r\n        name: 'Крымское ханство',\r\n        slug: 'crimean',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/crimean.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/crimean.png`,\r\n    },\r\n    {\r\n        name: 'Северное королевство',\r\n        slug: 'nordic',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/nordic.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/nordic.png`,\r\n    },\r\n    {\r\n        name: 'Руссветский союз',\r\n        slug: 'rusvet',\r\n        characterPath: `${ process.env.PUBLIC_URL }/assets/fractions/rusvet.jpg`,\r\n        iconPath: `${ process.env.PUBLIC_URL }/assets/icons/fractions/rusvet.png`,\r\n    },\r\n];\r\n\r\nexport const mats = [\r\n    'Промышленный (1)',\r\n    'Строительный (2)',\r\n    'Патриотический (3)',\r\n    'Технический (4)',\r\n    'Фермерский (5)',\r\n];\r\n\r\nexport const structureBonus = [\r\n    'Количество территорий с туннелями',\r\n    'Количество озёр',\r\n    'Количество территорий с символами приключений',\r\n    'Количество территорий с туннелями и вашими зданиями',\r\n    'Количество ваших зданий построенных в один ряд',\r\n    'Количество тундр и ферм с вашими зданиями',\r\n];\r\n\r\nexport const calculatePoints = (points: IPoints): number => {\r\n    let result = 0;\r\n\r\n    if (points.popularity >= 0 && points.popularity <= 6) {\r\n        result = (points.stars * 3) + (points.territories * 2) + Math.floor(points.resources / 2) + points.buildingBonuses + points.gold;\r\n    } else if (points.popularity >= 7 && points.popularity <= 12) {\r\n        result = (points.stars * 4) + (points.territories * 3) + Math.floor(points.resources / 2) * 2 + points.buildingBonuses + points.gold;\r\n    } else if (points.popularity >= 13 && points.popularity <= 18) {\r\n        result = (points.stars * 5) + (points.territories * 4) + Math.floor(points.resources / 2) * 3 + points.buildingBonuses + points.gold;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const foundEngNameFractionToUrl = (fraction: string): string => {\r\n    const dictionaryByFractionNames = keyBy(fractions, 'name');\r\n    return dictionaryByFractionNames[fraction].slug;\r\n};\r\n\r\nexport interface IPlayer extends IPoints {\r\n    id: string;\r\n    name: string;\r\n    fraction: string;\r\n    mat: string;\r\n    points: number;\r\n    gameEndPosition?: number;\r\n}\r\n\r\nexport interface IPoints {\r\n    gold: number;\r\n    popularity: number;\r\n    stars: number;\r\n    territories: number;\r\n    resources: number;\r\n    buildingBonuses: number;\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport StarIcon from '@material-ui/icons/Star';\nimport TerrainIcon from '@material-ui/icons/Terrain';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { calculatePoints, IPlayer, IPoints } from '../ScytheLogic';\n\nconst schema = yup.object().shape({\n    gold: yup.number().required().min(0).integer(),\n    popularity: yup.number().required().min(0).max(18).integer(),\n    stars: yup.number().required().min(0).max(6).integer(),\n    territories: yup.number().required().min(0).integer(),\n    resources: yup.number().required().min(0).integer(),\n    buildingBonuses: yup.number().required().min(0).max(9).integer(),\n});\n\ntype Props = {\n    player: IPlayer;\n    editPlayer(formValue: any): void;\n}\n\nconst ScoreForm: FunctionComponent<Props> = (props) => {\n    const { player, editPlayer } = props;\n\n    const { register, handleSubmit, errors, reset } = useForm<IPoints>({\n        defaultValues: {\n            gold: player?.gold,\n            popularity: player?.popularity,\n            stars: player?.stars,\n            territories: player?.territories,\n            resources: player?.resources,\n            buildingBonuses: player?.buildingBonuses,\n        },\n        mode: 'onBlur',\n        resolver: yupResolver(schema),\n    });\n\n    useEffect(() => {\n        reset(player);\n    }, [reset, player]);\n\n    const onSubmit = (data: IPoints) => {\n        const result = calculatePoints(data);\n        editPlayer({\n            ...player,\n            ...data,\n            points: result,\n        });\n    };\n\n    const handleOnFocus = (event: React.FocusEvent<any>): void => {\n        event.target.select();\n    };\n\n    return (\n        <form onSubmit={ handleSubmit(onSubmit) } autoComplete=\"off\">\n            <Grid container direction={ 'column' } spacing={ 2 }>\n                <Grid item>\n                    <TextField\n                        error={ !!errors.gold }\n                        helperText={ (errors?.gold as any)?.message }\n                        inputRef={ register }\n                        id=\"gold\"\n                        name=\"gold\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Монеты на руках\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <MonetizationOnIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.popularity }\n                        helperText={ (errors?.popularity as any)?.message }\n                        inputRef={ register }\n                        id=\"popularity\"\n                        name=\"popularity\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Популярность\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <FavoriteIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.stars }\n                        helperText={ (errors?.stars as any)?.message }\n                        inputRef={ register }\n                        id=\"stars\"\n                        name=\"stars\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Кол-во звезд\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <StarIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.territories }\n                        helperText={ (errors?.territories as any)?.message }\n                        inputRef={ register }\n                        id=\"territories\"\n                        name=\"territories\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Территорий (фабрика дает +3)\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <TerrainIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.resources }\n                        helperText={ (errors?.resources as any)?.message }\n                        inputRef={ register }\n                        id=\"resources\"\n                        name=\"resources\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Всего ресурсов\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <DonutLargeIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <TextField\n                        error={ !!errors.buildingBonuses }\n                        helperText={ (errors?.buildingBonuses as any)?.message }\n                        inputRef={ register }\n                        id=\"buildingBonuses\"\n                        name=\"buildingBonuses\"\n                        fullWidth\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Бонусы зданий\"\n                        type=\"number\"\n                        onFocus={ handleOnFocus }\n                        InputProps={ {\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <HomeIcon />\n                                </InputAdornment>\n                            ),\n                        } }\n                    />\n                </Grid>\n\n                <Grid item>\n                    <Grid container alignItems={ 'center' } justify={ 'space-between' } spacing={ 2 }>\n                        <Grid item>\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\">Подсчитать</Button>\n                        </Grid>\n\n                        <Grid item>\n                            <Typography variant={ 'h6' }>Очков: { player.points }</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </form>\n\n    );\n};\n\nexport default ScoreForm;\n","import { Button, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport React, { FunctionComponent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ScoreForm from '../components/ScoreForm';\r\nimport AppContext, { SpecType } from '../context/AppContext';\r\nimport Main from '../layouts/Main';\r\nimport { routes } from '../routes';\r\nimport { foundEngNameFractionToUrl, IPlayer } from '../ScytheLogic';\r\n\r\nfunction foundPlayer(players: SpecType, searchWord: string): IPlayer {\r\n    const array: IPlayer[] = Object.values(players);\r\n    return array.find(item => foundEngNameFractionToUrl(item.fraction) === searchWord) as IPlayer\r\n}\r\n\r\nconst Score: FunctionComponent = (props: any) => {\r\n    const { players, fetchPlayers, editPlayer } = React.useContext(AppContext);\r\n\r\n    const fraction = props.match.params.id;\r\n    const player = foundPlayer(players, fraction)\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n    }, []);\r\n\r\n    let prevPlayer = null;\r\n    let nextPlayer = null;\r\n    if (Object.values(players).length > 0) {\r\n        const sorted = Object.values(players).sort((a, b) =>\r\n            parseInt(a.mat.slice(-2, -1)) - parseInt(b.mat.slice(-2, -1)));\r\n\r\n        const currentIndex = sorted.findIndex(item => item.id === player.id);\r\n\r\n        prevPlayer = currentIndex >= 0 && Object.values(sorted)[currentIndex - 1] ? foundEngNameFractionToUrl(Object.values(sorted)[currentIndex - 1].fraction) : null;\r\n        nextPlayer = currentIndex >= 0 && Object.values(sorted)[currentIndex + 1] ? foundEngNameFractionToUrl(Object.values(sorted)[currentIndex + 1].fraction) : null;\r\n    }\r\n\r\n    if (!player) return <div>Loading</div>;\r\n\r\n    return (\r\n        <Main title={ 'Подсчет очков' }>\r\n            <Grid container direction={ 'column' } spacing={ 2 }>\r\n                <Grid item>\r\n                    <Grid container alignItems={ 'center' }>\r\n                        <Grid item xs={ 8 } sm={ 10 }>\r\n                            <Typography variant={ 'h5' }>Игрок: { player.name }</Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 2 } sm={ 1 } style={ { textAlign: 'end' } }>\r\n                            <IconButton\r\n                                disabled={ !Boolean(prevPlayer) }\r\n                                component={ Link }\r\n                                to={ `/score/${ prevPlayer }` }\r\n                                color=\"inherit\"\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={ 2 } sm={ 1 } style={ { textAlign: 'end' } }>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                disabled={ !Boolean(nextPlayer) }\r\n                                component={ Link }\r\n                                to={ `/score/${ nextPlayer }` }\r\n                                color=\"inherit\"\r\n                            >\r\n                                <ChevronRightIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ScoreForm player={ player } editPlayer={ editPlayer } />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Grid container alignItems={ 'center' } justify={ 'space-between' } spacing={ 2 }>\r\n                        <Grid item>\r\n                            <Button component={ Link } to={ routes.result.path } type=\"submit\" color=\"secondary\" variant=\"contained\">Результаты</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default Score;\r\n","import { IPlayer } from '../ScytheLogic';\n\nexport enum Types {\n    'FETCH_PLAYER',\n    'CREATE_PLAYER',\n    'EDIT_PLAYER',\n    'FETCH_PLAYERS',\n    'DELETE_PLAYER',\n    'CLEAR_PLAYERS_DATA',\n}\n\ntype ActionFetchPlayerType = {\n    type: Types.FETCH_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionFetchPlayersType = {\n    type: Types.FETCH_PLAYERS;\n    payload: IPlayer[];\n}\n\ntype ActionCreatePlayerType = {\n    type: Types.CREATE_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionEditPlayerType = {\n    type: Types.EDIT_PLAYER;\n    payload: IPlayer;\n}\n\ntype ActionDeletePlayerType = {\n    type: Types.DELETE_PLAYER;\n    payload: string;\n}\n\ntype ActionClearPlayerType = {\n    type: Types.CLEAR_PLAYERS_DATA;\n}\n\nexport type Action = ActionFetchPlayerType\n    | ActionFetchPlayersType\n    | ActionCreatePlayerType\n    | ActionEditPlayerType\n    | ActionDeletePlayerType\n    | ActionClearPlayerType;\n","import { CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n    media: {\n        objectPosition: '50% 25%',\n    },\n});\n\ntype Props = {\n    name?: string,\n    characterPath?: string\n};\n\nconst FractionCharacterImage: React.FC<Props> = (props) => {\n    const { name = '', characterPath = '' } = props;\n    const classes = useStyles();\n\n    return (\n        <CardMedia\n            component=\"img\"\n            height=\"140\"\n            className={ classes.media }\n            image={ characterPath }\n            alt={ name }\n            title={ name }\n        />\n    );\n};\n\nexport default FractionCharacterImage;\n","import React from 'react';\n\nconst FractionIcon: React.FC<{ name: string, iconPath: string }> = (props) => {\n    const { name, iconPath } = props;\n    return (\n        <img height={ 35 } src={ iconPath } alt={ name } />\n    );\n};\n\nexport default FractionIcon;\n","import { Card, CardActions, CardContent, MenuItem } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from '../context/AppContext';\r\nimport { foundEngNameFractionToUrl, fractions, IPlayer, mats } from '../ScytheLogic';\r\nimport FractionCharacterImage from './FractionCharacterImage';\r\nimport FractionIcon from './FractionIcon';\r\n\r\nconst PlayerCard: FunctionComponent<IPlayer | any> = (props) => {\r\n    const {\r\n        name, fraction, mat, id,\r\n    } = props;\r\n\r\n    const {\r\n        players,\r\n        editPlayer,\r\n        deletePlayer,\r\n    } = React.useContext(AppContext);\r\n\r\n    const handleChangeName = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], name: event.target.value };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleChangeFraction = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        const newFraction = event.target.value;\r\n        // @ts-ignore\r\n        const prevFraction = players[id].fraction;\r\n        const isNewFractionSelect = Object.values(players).find(player => player.fraction === newFraction);\r\n\r\n        // Если мы выбрали уже задействованную фракцию, поменяем значения местами\r\n        if (isNewFractionSelect) {\r\n            // @ts-ignore\r\n            const changesPlayers = { ...players[isNewFractionSelect.id], fraction: prevFraction };\r\n            editPlayer(changesPlayers);\r\n        }\r\n\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], fraction: newFraction };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleChangeMat = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>, id: string) => {\r\n        const newMat = event.target.value;\r\n        // @ts-ignore\r\n        const prevMat = players[id].mat;\r\n        const isNewMatSelect = Object.values(players).find(player => player.mat === newMat);\r\n\r\n        if (isNewMatSelect) {\r\n            // @ts-ignore\r\n            const changesPlayers = { ...players[isNewMatSelect.id], mat: prevMat };\r\n            editPlayer(changesPlayers);\r\n        }\r\n\r\n        // @ts-ignore\r\n        const changesPlayers = { ...players[id], mat: newMat };\r\n        editPlayer(changesPlayers);\r\n    };\r\n\r\n    const handleDeletePlayer = (id: string) => {\r\n        deletePlayer(id);\r\n    };\r\n\r\n    const handleOnFocus = (event: React.FocusEvent<any>): void => {\r\n        event.target.select();\r\n    };\r\n\r\n    const onSubmit = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <FractionCharacterImage { ...fractions.find(i => i.name === fraction) } />\r\n            <CardContent>\r\n                <form onSubmit={ onSubmit }>\r\n                    <Grid container spacing={ 2 } direction={ 'column' }>\r\n                        <Grid item xs={ 12 }>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                defaultValue={ name }\r\n                                onChange={ (event) => handleChangeName(event, id) }\r\n                                onFocus={ handleOnFocus }\r\n                                variant=\"outlined\"\r\n                                size=\"medium\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={ 12 }>\r\n                            <Grid container justify={ 'space-between' }>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        select\r\n                                        SelectProps={ {\r\n                                            renderValue: (value: any) => {\r\n                                                const fraction = fractions.find(i => i.name === value);\r\n                                                return (\r\n                                                    <div\r\n                                                        style={ {\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                        } }\r\n                                                    >\r\n                                                        { fraction && <FractionIcon { ...fraction } /> }\r\n                                                    </div>);\r\n                                            },\r\n                                        } }\r\n                                        label=\"Фракция\"\r\n                                        value={ fraction }\r\n                                        onChange={ (event) => handleChangeFraction(event, id) }\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                    >\r\n                                        { fractions.map((value) => (\r\n                                            <MenuItem key={ value.name } value={ value.name }>\r\n                                                <FractionIcon { ...value } />&nbsp;&nbsp;&nbsp;{ value.name }\r\n                                            </MenuItem>\r\n                                        )) }\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item className=\"mats-input\">\r\n                                    <TextField\r\n                                        select\r\n                                        label=\"Планшет\"\r\n                                        value={ mat }\r\n                                        onChange={ (event) => handleChangeMat(event, id) }\r\n                                        variant=\"outlined\"\r\n                                        size=\"medium\"\r\n                                        fullWidth\r\n                                    >\r\n                                        { mats.map((value) => (\r\n                                            <MenuItem key={ value } value={ value }>\r\n                                                { value }\r\n                                            </MenuItem>\r\n                                        )) }\r\n                                    </TextField>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </CardContent>\r\n\r\n            <CardActions disableSpacing style={ { paddingTop: 0, display: 'flex', justifyContent: 'flex-end' } }>\r\n                <Button\r\n                    style={ { marginRight: 'auto' } }\r\n                    component={ Link } to={ `/score/${ foundEngNameFractionToUrl(fraction) }` }\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                >\r\n                    Подсчитать очки\r\n                </Button>\r\n\r\n                <Button\r\n                    color=\"secondary\"\r\n                    size=\"medium\"\r\n                    onClick={ () => handleDeletePlayer(id) }\r\n                >\r\n                    Удалить\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default PlayerCard;\r\n","import Result from './pages/Result';\nimport ResultShort from './pages/ResultShort';\nimport Score from './pages/Score';\nimport Start from './pages/Start';\n\nexport const routes = {\n    'index': {\n        path: '/scythe-app/',\n        title: 'Кто играет?',\n        exact: true,\n        component: Start,\n    },\n    'score': {\n        path: '/scythe-app/score/:id',\n        title: 'Подсчет очков',\n        exact: true,\n        component: Score,\n    },\n    'result': {\n        path: '/scythe-app/result',\n        title: 'Итоги по окончанию игры',\n        exact: true,\n        component: Result,\n    },\n    'winner': {\n        path: '/scythe-app/winner',\n        title: 'Результат',\n        exact: true,\n        component: ResultShort,\n    },\n};\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, { FunctionComponent, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PlayerCard from '../components/PlayerCard';\nimport AppContext from '../context/AppContext';\nimport Main from '../layouts/Main';\nimport { foundEngNameFractionToUrl, mats } from '../ScytheLogic';\n\nconst Start: FunctionComponent = () => {\n    const {\n        players,\n        createPlayer,\n        fetchPlayers,\n    } = React.useContext(AppContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchPlayers();\n    }, []);\n\n    const handleAddPlayer = () => {\n        createPlayer();\n    };\n\n    const handleCalculateScore = (): void => {\n        for (const mat of mats) {\n            const playerFirstTurn = Object.values(players).find(player => player.mat === mat);\n            if (playerFirstTurn) {\n                history.push(`/score/${ foundEngNameFractionToUrl(playerFirstTurn.fraction) }`);\n                break;\n            }\n        }\n    };\n\n    return (\n        <Main>\n            <Grid container direction=\"column\" spacing={ 4 }>\n                <Grid item>\n                    <Grid container direction=\"column\" spacing={ 1 }>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\" color=\"primary\" fullWidth\n                                onClick={ handleAddPlayer }\n                            >\n                                Добавить игрока\n                            </Button>\n                        </Grid>\n\n                        <Grid item>\n                            <Button\n                                variant=\"contained\" color=\"secondary\" fullWidth\n                                onClick={ handleCalculateScore }\n                            >\n                                Подсчет очков\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item>\n                    <Grid container direction=\"column\" spacing={ 2 }>\n                        { Object.values(players).map((player) =>\n                            <Grid key={ player.id } item><PlayerCard { ...player } /></Grid>) }\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Main>\n    );\n};\n\nexport default Start;\n\n","import { IconButton, Typography } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport React, { FunctionComponent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { routes } from '../routes';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        toolbar: {\n            justifyContent: 'space-between',\n        },\n        title: {\n            marginLeft: 'auto',\n        },\n    }),\n);\n\ntype Props = {\n    title?: string;\n}\n\nconst AppHeader: FunctionComponent<Props> = (props) => {\n    const { title = 'Scythe Point Calculator' } = props;\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar className={ classes.toolbar }>\n                { history.location.pathname !== routes.index.path &&\n                <IconButton\n                    component={ Link }\n                    to={ routes.index.path }\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"back\"\n                >\n                    <ArrowBackIosIcon />\n                </IconButton>\n                }\n\n                <Typography variant=\"h6\" className={ classes.title }>\n                    { title }\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default AppHeader;\n\n\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default () => (\n    <ToastContainer\n        position=\"bottom-right\"\n        autoClose={ 5000 }\n        hideProgressBar={ false }\n        newestOnTop\n        closeOnClick\n        rtl={ false }\n        pauseOnFocusLoss={ false }\n        draggable\n        pauseOnHover\n    />\n)\n","import Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { FunctionComponent } from 'react';\r\nimport AppHeader from '../components/AppHeader';\r\nimport ToastMessage from '../pages/ToastMessage';\r\n\r\nconst useStyles = makeStyles({\r\n    fixed: {\r\n        '@media (min-width: 600px)': {\r\n            maxWidth: 768,\r\n        },\r\n        '@media (min-width: 960px)': {\r\n            maxWidth: 960\r\n        },\r\n        '@media (min-width: 1280px)': {\r\n            maxWidth: 1280\r\n        }\r\n    },\r\n});\r\n\r\ntype Props = {\r\n    title?: string;\r\n};\r\n\r\nconst Main: FunctionComponent<Props> = (props) => {\r\n    const { title } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n\r\n            <AppHeader title={ title } />\r\n\r\n            <ToastMessage />\r\n\r\n            <Container fixed  className={ classes.fixed }>\r\n                <main style={ { height: '90vh', paddingTop: 30 } }>\r\n                    { props.children }\r\n                </main>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport Main from '../layouts/Main';\nimport { routes } from '../routes';\n\nconst NotFound: FunctionComponent = () => {\n    return (\n        <Main>\n            <Typography variant={ 'h1' } align={ 'center' }>404?!</Typography>\n            <Button component={ Link } to={ routes.index.path } variant=\"outlined\" color=\"primary\" fullWidth>\n                Вернуться на главную\n            </Button>\n        </Main>\n    );\n};\n\nexport default NotFound;\n","import React, { FC } from 'react';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport history from './history';\nimport NotFound from './pages/NotFound';\nimport { routes } from './routes';\n\nconst App: FC = () => (\n    <Router history={ history }>\n        <Switch>\n            { Object.values(routes).map(route => <Route key={ route.path } { ...route } />) }\n            <Route component={ NotFound } />\n        </Switch>\n    </Router>\n);\n\nexport default App;\n","import mapKeys from 'lodash-es/mapKeys';\nimport omit from 'lodash-es/omit';\nimport { Action, Types } from './Types';\n\nexport default function appReducer(state: Object = {}, action: Action) {\n    switch (action.type) {\n        case Types.FETCH_PLAYERS:\n            return { ...state, ...mapKeys(action.payload, 'id') };\n        case Types.FETCH_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.CREATE_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.EDIT_PLAYER:\n            return { ...state, [action.payload.id]: action.payload };\n        case Types.DELETE_PLAYER:\n            return omit(state, action.payload);\n        case Types.CLEAR_PLAYERS_DATA:\n            return {};\n        default:\n            return state;\n    }\n}\n","import { useLocalStorage, writeStorage } from '@rehooks/local-storage';\r\nimport { nanoid } from 'nanoid';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { fractions, mats, TOTAL_PLAYERS } from '../ScytheLogic';\r\nimport AppContext, { SpecType } from './AppContext';\r\nimport appReducer from './appReducer';\r\nimport { Action, Types } from './Types';\r\n\r\nfunction shuffle(array: any): Array<any> {\r\n    const result = [...array];\r\n    for (let i = result.length - 1; i > 0; i--) {\r\n        let randIndex = Math.floor(Math.random() * (i + 1));\r\n        let temp = result[i];\r\n        result[i] = result[randIndex];\r\n        result[randIndex] = temp;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst AppProvider: React.FC = props => {\r\n    const { children } = props;\r\n\r\n    // @ts-ignore\r\n    const [players, dispatch]: [players: SpecType, dispatch: React.Dispatch<Action>] = useReducer(appReducer, {});\r\n\r\n    // LOAD FROM LocalStorage\r\n    const [storagePlayers] = useLocalStorage<any>('players');\r\n\r\n    // SAVE TO LocalStorage\r\n    useEffect(() => { writeStorage('players', players); }, [players]);\r\n\r\n    function fetchPlayer(id: string): void {\r\n        if (storagePlayers) {\r\n            dispatch({ type: Types.FETCH_PLAYER, payload: storagePlayers[id] });\r\n        }\r\n    }\r\n\r\n    function fetchPlayers(): void {\r\n        if (storagePlayers) {\r\n            dispatch({ type: Types.FETCH_PLAYERS, payload: storagePlayers });\r\n        }\r\n    }\r\n\r\n    function createPlayer(): void {\r\n        if (Object.values(players).length >= TOTAL_PLAYERS) {\r\n            toast.error('🔥 Максимальное количество игроков: 5', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            return;\r\n        } else {\r\n            toast.success('✔ Добавлен игрок', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n        // 1. Получить уже используемые фракции и планшеты\r\n        const usedFraction = Object.values(players).map(i => i.fraction);\r\n        const usedMats = Object.values(players).map(i => i.mat);\r\n\r\n        // 2. Рандомно выберем фракции и планшеты, уберем уже используемые\r\n        const randomFractions = shuffle(fractions.map(i => i.name)).filter(i => !usedFraction.includes(i));\r\n        const randomMats = shuffle(mats).filter(i => !usedMats.includes(i));\r\n\r\n        // 3. Готово!\r\n        const fraction = randomFractions[0];\r\n        const mat = randomMats[0];\r\n\r\n        const player = {\r\n            id: nanoid(),\r\n            name: 'Player ' + (Object.values(players).length + 1),\r\n            fraction,\r\n            mat,\r\n            gold: 0,\r\n            popularity: 0,\r\n            stars: 0,\r\n            territories: 0,\r\n            resources: 0,\r\n            buildingBonuses: 0,\r\n            points: 0,\r\n        };\r\n\r\n        dispatch({ type: Types.CREATE_PLAYER, payload: player });\r\n    }\r\n\r\n    function editPlayer(formValues: any): void {\r\n        dispatch({ type: Types.EDIT_PLAYER, payload: formValues });\r\n    }\r\n\r\n    function deletePlayer(id: string): void {\r\n        dispatch({ type: Types.DELETE_PLAYER, payload: id });\r\n    }\r\n\r\n    function clearData(): void {\r\n        Object.values(players).forEach(player => deletePlayer(player.id));\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={ {\r\n                players,\r\n                dispatch,\r\n                fetchPlayer,\r\n                fetchPlayers,\r\n                createPlayer,\r\n                editPlayer,\r\n                deletePlayer,\r\n                clearData,\r\n            } }\r\n        >\r\n            { children }\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport AppProvider from './context/AppProvider';\n\nReactDOM.render(\n    <AppProvider>\n        <App />\n    </AppProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}